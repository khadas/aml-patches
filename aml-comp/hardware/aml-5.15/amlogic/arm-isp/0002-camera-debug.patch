From 30ee1c791fe024b9a605190c00485d44772bf27f Mon Sep 17 00:00:00 2001
From: "yao.zhou" <yao.zhou@amlogic.com>
Date: Wed, 11 Oct 2023 16:45:40 +0800
Subject: [PATCH 2/2] camera: debug

Change-Id: Ifd088b9c2e288c635bd92a26e60f4021acc30bed
Signed-off-by: yao.zhou <yao.zhou@amlogic.com>
---
 .../kernel/v4l2_dev/src/platform/system_am_sc3.c       | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

diff --git a/linux_515_t7/kernel/v4l2_dev/src/platform/system_am_sc3.c b/linux_515_t7/kernel/v4l2_dev/src/platform/system_am_sc3.c
index 0f0ab5a9..b60e34f6 100644
--- a/linux_515_t7/kernel/v4l2_dev/src/platform/system_am_sc3.c
+++ b/linux_515_t7/kernel/v4l2_dev/src/platform/system_am_sc3.c
@@ -711,8 +711,8 @@ static void sc_do_tasklet( unsigned long data )
     u8 ctx_id = ((struct sc_tasklet_t *)data)->ctx_id;
     metadata_t metadata;
     memset(&metadata, 0, sizeof(metadata_t));
-    //pr_err("do tasklet: %d\n", ctx_id);
     while (kfifo_out(&am3_ctx[ctx_id].sc_fifo_out, &f_buff, sizeof(tframe_t*))) {
+        pr_err("do tasklet: %u frame_id %d\n", ctx_id, am3_ctx[ctx_id].frame_id);
         metadata.width = am3_ctx[ctx_id].info.out_w;
         metadata.height = am3_ctx[ctx_id].info.out_h;
         metadata.frame_id = am3_ctx[ctx_id].frame_id;
@@ -774,7 +774,7 @@ static irqreturn_t isp_sc_isr(int irq, void *data)
     } else {
         /* maybe need drop one more frame */
         if (g_sc3->start_delay_cnt == START_DELAY_THR) {
-            pr_info("wrmif start: %x, %x, %x\n", sc_get_reg(ISP_SCWR_TOP_DBG1), sc_get_reg(ISP_SCWR_TOP_DBG2), sc_get_reg(ISP_SCWR_TOP_CTRL));
+            pr_err("wrmif start: %x, %x, %x\n", sc_get_reg(ISP_SCWR_TOP_DBG1), sc_get_reg(ISP_SCWR_TOP_DBG2), sc_get_reg(ISP_SCWR_TOP_CTRL));
             sc_wr_reg_bits(ISP_SCWR_TOP_CTRL, 1, 1, 1);
             sc_wr_reg_bits(ISP_SCWR_TOP_CTRL, 1, 0, 1);
             g_sc3->start_delay_cnt++;
@@ -790,7 +790,7 @@ static irqreturn_t isp_sc_isr(int irq, void *data)
             flag_ready = (flag & (1 << 6)) ? 1 : 0;
             if (flag_ready == g_sc3->last_end_frame) {
                 if (am3_ctx[g_sc3->cam_id_current].temp_buf) {
-                    pr_info("%d, sc last fifo no ready %d.\n", __LINE__, g_sc3->cam_id_current);
+                    pr_err("%d, sc last fifo no ready %d.\n", __LINE__, g_sc3->cam_id_current);
                     am_sc_swap_buf(1, flag_ready);
                     g_sc3->no_ready_th ++;
                     g_sc3->working = 0;
@@ -809,7 +809,7 @@ static irqreturn_t isp_sc_isr(int irq, void *data)
                 if (retval != sizeof(tframe_t*))
                     pr_info("%d, fifo out failed %d.\n", __LINE__, g_sc3->cam_id_next);
             } else {
-                //pr_info("%d, sc fifo is empty %d.\n", __LINE__, g_sc3->cam_id_next);
+                pr_err("%d, sc fifo is empty %d.\n", __LINE__, g_sc3->cam_id_next);
                 //also output stream into camera dummy fifo. it can keep correct cam seq
                 if (am3_ctx[g_sc3->cam_id_next].temp_buf)
                     f_buf = am3_ctx[g_sc3->cam_id_next].temp_buf;
@@ -1013,7 +1013,7 @@ void am_sc3_api_dma_buffer(int ctx_id, tframe_t * data, unsigned int index)
     } else {
         pr_info("sc fifo is full .\n");
     }
-    //pr_err("sc dma buffer:%d, %d, %x\n", ctx_id, index, buf->primary.address);
+    pr_err("sc dma buffer:%d, %d, %x\n", ctx_id, index, buf->primary.address);
     spin_unlock_irqrestore(&g_sc3->sc_lock, flags);
 }
 
-- 
2.25.1

