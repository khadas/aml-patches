From 1722c990a305b822d47cfec748e7aed8e24bd86b Mon Sep 17 00:00:00 2001
From: "tong.gao" <tong.gao@amlogic.com>
Date: Tue, 16 May 2023 14:25:19 +0800
Subject: [PATCH 1/3] venc: t7c discriminating use drmbufferpool [1/1]

PD#SWPL-123972

Problem:
venc plugin new drmbufferpool

Solution:
Joining judgment

Verify:
local

Signed-off-by: tong.gao <tong.gao@amlogic.com>
Change-Id: I1dd77a639ff4732f05de08db72f95588d7873529
---
 multienc-wave521/gstamlvenc_multienc.c | 68 +++++++++++++++++---------
 1 file changed, 46 insertions(+), 22 deletions(-)

diff --git a/multienc-wave521/gstamlvenc_multienc.c b/multienc-wave521/gstamlvenc_multienc.c
index ed49bca..00c7940 100644
--- a/multienc-wave521/gstamlvenc_multienc.c
+++ b/multienc-wave521/gstamlvenc_multienc.c
@@ -1019,25 +1019,59 @@ gst_amlvenc_propose_allocation (GstVideoEncoder * encoder, GstQuery * query)
 {
   GstAmlVEnc *self = GST_AMLVENC (encoder);
   GstVideoInfo *info;
-  // guint size, min = 0, max = 0;
+  guint size, min = 0, max = 0;
   GstCaps *caps;
   GstBufferPool *pool = NULL;
-  gboolean need_pool;
-
-  gst_query_parse_allocation(query, &caps, &need_pool);
-  GST_DEBUG_OBJECT(encoder, "need_pool: %d", need_pool);
+  gboolean need_pool = FALSE;
 
   if (!self->input_state)
     return FALSE;
 
   info = &self->input_state->info;
-  // if (gst_query_get_n_allocation_pools (query) > 0) {
-  //   gst_query_parse_nth_allocation_pool (query, 0, NULL, &size, &min, &max);
-  //   size = MAX (size, info->size);
-  //   gst_query_set_nth_allocation_pool (query, 0, NULL, size, self->min_buffers, self->max_buffers);
-  // } else {
-  //   gst_query_add_allocation_pool (query, NULL, info->size, self->min_buffers, self->max_buffers);
-  // }
+
+  if (info) {
+      switch (GST_VIDEO_INFO_FORMAT(info)) {
+      case GST_VIDEO_FORMAT_NV12:
+      case GST_VIDEO_FORMAT_NV21:
+          {
+            GST_DEBUG_OBJECT(encoder, "choose gst_drm_bufferpool");
+            gst_query_parse_allocation(query, &caps, &need_pool);
+            GST_DEBUG_OBJECT(encoder, "need_pool: %d", need_pool);
+
+              if (need_pool) {
+                      pool = gst_drm_bufferpool_new(FALSE, GST_DRM_BUFFERPOOL_TYPE_VIDEO_PLANE);
+                      GST_DEBUG_OBJECT(encoder, "new gst_drm_bufferpool");
+                  }
+
+              gst_query_add_allocation_pool(query, pool, info->size, DRMBP_EXTRA_BUF_SIZE_FOR_DISPLAY, DRMBP_LIMIT_MAX_BUFSIZE_TO_BUFSIZE);
+              GST_DEBUG_OBJECT(encoder, "info->size: %d", info->size);
+                      if (pool)
+                      g_object_unref(pool);
+
+              gst_query_add_allocation_meta (query, GST_VIDEO_META_API_TYPE, NULL);
+
+          break;
+          }
+      default: //hanle not NV12/NV21
+          {
+            GST_DEBUG_OBJECT(encoder, "choose fake bufferpool");
+            if (gst_query_get_n_allocation_pools (query) > 0) {
+              gst_query_parse_nth_allocation_pool (query, 0, NULL, &size, &min, &max);
+              size = MAX (size, info->size);
+              gst_query_set_nth_allocation_pool (query, 0, NULL, size, self->min_buffers, self->max_buffers);
+            } else {
+              gst_query_add_allocation_pool (query, NULL, info->size, self->min_buffers, self->max_buffers);
+              GST_DEBUG_OBJECT(encoder, "info->size: %d", info->size);
+            }
+
+              gst_query_add_allocation_meta (query, GST_VIDEO_META_API_TYPE, NULL);
+          break;
+          }
+      }
+  } else {
+        GST_DEBUG_OBJECT(encoder, "can not get videoinfo");
+        return FALSE;
+  }
 
  if (self->b_enable_dmallocator) {
     GstAllocator *allocator = NULL;
@@ -1062,16 +1096,6 @@ gst_amlvenc_propose_allocation (GstVideoEncoder * encoder, GstQuery * query)
       gst_object_unref (allocator);
   }
 
-  if (need_pool)
-      pool = gst_drm_bufferpool_new(FALSE, GST_DRM_BUFFERPOOL_TYPE_VIDEO_PLANE);
-      GST_DEBUG_OBJECT(encoder, "new gst_drm_bufferpool");
-
-  gst_query_add_allocation_pool(query, pool, info->size, DRMBP_EXTRA_BUF_SIZE_FOR_DISPLAY, DRMBP_LIMIT_MAX_BUFSIZE_TO_BUFSIZE);
-  GST_DEBUG_OBJECT(encoder, "info->size: %d", info->size);
-  if (pool)
-      g_object_unref(pool);
-
-  gst_query_add_allocation_meta (query, GST_VIDEO_META_API_TYPE, NULL);
   return GST_VIDEO_ENCODER_CLASS (parent_class)->propose_allocation (encoder,
       query);
 }
-- 
2.25.1

