From 4cca4e89b1ff112959f1e6ce580a61fc61af5d24 Mon Sep 17 00:00:00 2001
From: hang cheng <hang.cheng@amlogic.com>
Date: Wed, 25 Nov 2020 18:22:57 +0800
Subject: [PATCH 1/4] hdmitx: drm: correct hdcp result for uevent [1/1]

PD#SWPL-36826

Problem:
hdcp result for uevent is wrong

Solution:
correct hdcp result for drm uevent

Verify:
U212

Change-Id: Id7eb0c23509aa045dd22198d0de5d2685ee81664
Signed-off-by: hang cheng <hang.cheng@amlogic.com>
---
 drivers/amlogic/drm/meson_hdmi.c                           |  5 +++++
 .../amlogic/media/vout/hdmitx/hdmi_tx_20/hdmi_tx_hdcp.c    | 14 +++++++++++---
 .../amlogic/media/vout/hdmitx/hdmi_tx_20/hw/hdmi_tx_hw.c   |  5 +++++
 include/linux/amlogic/media/vout/hdmi_tx/hdmi_tx_module.h  |  1 +
 4 files changed, 22 insertions(+), 3 deletions(-)

diff --git a/drivers/amlogic/drm/meson_hdmi.c b/drivers/amlogic/drm/meson_hdmi.c
index de9b501..6a2d5b7 100644
--- a/drivers/amlogic/drm/meson_hdmi.c
+++ b/drivers/amlogic/drm/meson_hdmi.c
@@ -1488,6 +1488,10 @@ void am_hdmitx_hdcp_result(unsigned int *exe_type,
 	*result_type = (unsigned int)am_hdmi_info.hdcp_result;
 }
 
+void am_hdmitx_set_hdcp_mode(unsigned int user_type)
+{
+	am_hdmi_info.hdcp_user_type = user_type;
+}
 static int am_meson_hdmi_probe(struct platform_device *pdev)
 {
 	struct hdmitx_dev *hdmitx_dev;
@@ -1499,6 +1503,7 @@ static int am_meson_hdmi_probe(struct platform_device *pdev)
 	hdmitx_dev->hwop.am_hdmitx_hdcp_disable = am_hdmitx_hdcp_disable;
 	hdmitx_dev->hwop.am_hdmitx_hdcp_enable = am_hdmitx_hdcp_enable;
 	hdmitx_dev->hwop.am_hdmitx_hdcp_result = am_hdmitx_hdcp_result;
+	hdmitx_dev->hwop.am_hdmitx_set_hdcp_mode = am_hdmitx_set_hdcp_mode;
 	return component_add(&pdev->dev, &am_meson_hdmi_ops);
 }
 
diff --git a/drivers/amlogic/media/vout/hdmitx/hdmi_tx_20/hdmi_tx_hdcp.c b/drivers/amlogic/media/vout/hdmitx/hdmi_tx_20/hdmi_tx_hdcp.c
index 04536b7..8d2dc5a 100644
--- a/drivers/amlogic/media/vout/hdmitx/hdmi_tx_20/hdmi_tx_hdcp.c
+++ b/drivers/amlogic/media/vout/hdmitx/hdmi_tx_20/hdmi_tx_hdcp.c
@@ -109,15 +109,23 @@ static int hdmitx_hdcp_task(void *data)
 {
 	static int auth_trigger;
 	struct hdmitx_dev *hdev = (struct hdmitx_dev *)data;
+	unsigned int hdcp_mode;
 
 	INIT_DELAYED_WORK(&hdev->work_do_hdcp, _hdcp_do_work);
 	while (hdev->hpd_event != 0xff) {
-		hdmi_authenticated = hdev->hwop.cntlddc(hdev,
-			DDC_HDCP_GET_AUTH, 0);
+		if (hdev->drm_feature) {
+			if (hdev->hwop.am_hdmitx_hdcp_result)
+				hdev->hwop.am_hdmitx_hdcp_result(&hdcp_mode,
+				&hdmi_authenticated);
+		} else {
+			hdmi_authenticated = hdev->hwop.cntlddc(hdev,
+				DDC_HDCP_GET_AUTH, 0);
+			hdcp_mode = hdev->hdcp_mode;
+		}
 		hdmitx_hdcp_status(hdmi_authenticated);
 		if (auth_trigger != hdmi_authenticated) {
 			auth_trigger = hdmi_authenticated;
-			pr_info("hdcptx: %d  auth: %d\n", hdev->hdcp_mode,
+			pr_info("hdcptx: %d  auth: %d\n", hdcp_mode,
 				auth_trigger);
 		}
 		msleep_interruptible(200);
diff --git a/drivers/amlogic/media/vout/hdmitx/hdmi_tx_20/hw/hdmi_tx_hw.c b/drivers/amlogic/media/vout/hdmitx/hdmi_tx_20/hw/hdmi_tx_hw.c
index 857b8b3..df9af01 100644
--- a/drivers/amlogic/media/vout/hdmitx/hdmi_tx_20/hw/hdmi_tx_hw.c
+++ b/drivers/amlogic/media/vout/hdmitx/hdmi_tx_20/hw/hdmi_tx_hw.c
@@ -3436,6 +3436,11 @@ static void hdmitx_debug(struct hdmitx_dev *hdev, const char *buf)
 		}
 	} else if (strncmp(tmpbuf, "stop_vsif", 9) == 0) {
 		hdmitx_disable_packet(HDMI_PACKET_VEND);
+	} else if (strncmp(tmpbuf, "hdcp_mode", 9) == 0) {
+		ret = kstrtoul(tmpbuf + 9, 16, &value);
+		if ((value >= 0) && (value <= 3) &&
+			hdev->hwop.am_hdmitx_set_hdcp_mode)
+			hdev->hwop.am_hdmitx_set_hdcp_mode(value);
 	}
 }
 
diff --git a/include/linux/amlogic/media/vout/hdmi_tx/hdmi_tx_module.h b/include/linux/amlogic/media/vout/hdmi_tx/hdmi_tx_module.h
index 5ee741a..eacc4c9 100644
--- a/include/linux/amlogic/media/vout/hdmi_tx/hdmi_tx_module.h
+++ b/include/linux/amlogic/media/vout/hdmi_tx/hdmi_tx_module.h
@@ -382,6 +382,7 @@ struct hdmitx_dev {
 		void (*am_hdmitx_hdcp_enable)(void);
 		void (*am_hdmitx_hdcp_result)(unsigned int *exe_type,
 				unsigned int *result_type);
+		void (*am_hdmitx_set_hdcp_mode)(unsigned int user_type);
 	} hwop;
 	struct {
 		unsigned int hdcp14_en;
-- 
2.7.4

