From 58d5bf4399e4189a4ac92ddd1891e9a9a52ba677 Mon Sep 17 00:00:00 2001
From: Dezhi Kong <dezhi.kong@amlogic.com>
Date: Tue, 26 May 2020 10:48:36 +0800
Subject: [PATCH 1/3] drm: add strmode check [1/1]

PD#SWPL-26565

Problem:
drm will init without strmode check process

Solution:
add strmode check

Verify:
u212

Change-Id: I356b72dd9a352ea12a5c7ff130fdff93389f3acd
Signed-off-by: Dezhi Kong <dezhi.kong@amlogic.com>
---
 drivers/amlogic/drm/meson_drv.c                   | 9 ++++++++-
 drivers/amlogic/drm/meson_fb.c                    | 3 ++-
 drivers/amlogic/media/enhancement/amvecm/amve.c   | 8 ++++++++
 drivers/amlogic/media/enhancement/amvecm/amvecm.c | 9 ++++++---
 4 files changed, 24 insertions(+), 5 deletions(-)

diff --git a/drivers/amlogic/drm/meson_drv.c b/drivers/amlogic/drm/meson_drv.c
index a084745..8967c19 100644
--- a/drivers/amlogic/drm/meson_drv.c
+++ b/drivers/amlogic/drm/meson_drv.c
@@ -136,12 +136,15 @@ static void am_meson_disable_vblank(struct drm_device *dev, unsigned int crtc)
 	priv->crtc_funcs[crtc]->disable_vblank(priv->crtc);
 }
 
+/*Todo: change the type according to the uboot env boot args*/
+static char *strmode;
 struct am_meson_logo logo;
 core_param(fb_width, logo.width, uint, 0644);
 core_param(fb_height, logo.height, uint, 0644);
 core_param(display_bpp, logo.bpp, uint, 0644);
 core_param(outputmode, logo.outputmode_t, charp, 0644);
 core_param(osd_reverse, logo.osd_reverse, uint, 0644);
+core_param(lastpwrmode, strmode, charp, 0644);
 
 static struct drm_framebuffer *am_meson_logo_init_fb(struct drm_device *dev)
 {
@@ -619,7 +622,11 @@ static int am_meson_drm_bind(struct device *dev)
 
 	drm_kms_helper_poll_init(drm);
 
-	am_meson_load_logo(drm);
+	/*Todo: the condition may need change according to the boot args*/
+	if (!strcmp("4", strmode))
+		DRM_INFO("current is strmode\n");
+	else
+		am_meson_load_logo(drm);
 
 #ifdef CONFIG_DRM_MESON_EMULATE_FBDEV
 	ret = am_meson_drm_fbdev_init(drm);
diff --git a/drivers/amlogic/drm/meson_fb.c b/drivers/amlogic/drm/meson_fb.c
index f9210b4..f797487 100644
--- a/drivers/amlogic/drm/meson_fb.c
+++ b/drivers/amlogic/drm/meson_fb.c
@@ -23,12 +23,13 @@
 void am_meson_fb_destroy(struct drm_framebuffer *fb)
 {
 	struct am_meson_fb *meson_fb = to_am_meson_fb(fb);
+	struct meson_drm *private = fb->dev->dev_private;
 	int i;
 
 	for (i = 0; i < AM_MESON_GEM_OBJECT_NUM && meson_fb->bufp[i]; i++)
 		drm_gem_object_unreference_unlocked(&meson_fb->bufp[i]->base);
 	drm_framebuffer_cleanup(fb);
-	if (meson_fb->logo && meson_fb->logo->alloc_flag)
+	if (private->logo && private->logo->alloc_flag)
 		am_meson_free_logo_memory();
 	DRM_DEBUG("meson_fb=0x%p,\n", meson_fb);
 	kfree(meson_fb);
diff --git a/drivers/amlogic/media/enhancement/amvecm/amve.c b/drivers/amlogic/media/enhancement/amvecm/amve.c
index e1b85da..68ae059 100644
--- a/drivers/amlogic/media/enhancement/amvecm/amve.c
+++ b/drivers/amlogic/media/enhancement/amvecm/amve.c
@@ -1912,6 +1912,7 @@ void set_gamma_regs(int en, int sel)
 
 void amvecm_wb_enable(int enable)
 {
+#if 0
 	if (enable) {
 		wb_en = 1;
 		if (video_rgb_ogo_xvy_mtx)
@@ -1925,6 +1926,13 @@ void amvecm_wb_enable(int enable)
 		else
 			WRITE_VPP_REG_BITS(VPP_GAINOFF_CTRL0, 0, 31, 1);
 	}
+#else // disable wb enable for OTT product
+	wb_en = 0;
+	if (video_rgb_ogo_xvy_mtx)
+		WRITE_VPP_REG_BITS(VPP_MATRIX_CTRL, 0, 6, 1);
+	else
+		WRITE_VPP_REG_BITS(VPP_GAINOFF_CTRL0, 0, 31, 1);
+#endif
 }
 
 int vpp_pq_ctrl_config(struct pq_ctrl_s pq_cfg)
diff --git a/drivers/amlogic/media/enhancement/amvecm/amvecm.c b/drivers/amlogic/media/enhancement/amvecm/amvecm.c
index 60ea9fb..f77914d 100644
--- a/drivers/amlogic/media/enhancement/amvecm/amvecm.c
+++ b/drivers/amlogic/media/enhancement/amvecm/amvecm.c
@@ -7307,15 +7307,18 @@ void init_pq_control(unsigned int enable)
 /* #if (MESON_CPU_TYPE == MESON_CPU_TYPE_MESONG9TV) */
 void init_pq_setting(void)
 {
+#if 0
 	struct vinfo_s *vinfo = get_current_vinfo();
-
+#endif
 	int bitdepth;
-
+#if 0
 	if (vinfo->viu_color_fmt == COLOR_FMT_RGB444)
 		init_pq_control(PQ_TV);
 	else
 		init_pq_control(PQ_BOX);
-
+#else // only enbale PQ_BOX for OTT BOX
+	init_pq_control(PQ_BOX);
+#endif
 	/*ai pq interface*/
 	ai_detect_scene_init();
 	adaptive_param_init();
-- 
2.7.4

