From 8e2c49e470103d79bb22aba944fee46828936ea3 Mon Sep 17 00:00:00 2001
From: Tim Yao <tim.yao@amlogic.com>
Date: Mon, 10 Aug 2020 11:05:41 -0700
Subject: [PATCH 2/7] aml_audio_hal: Fix HDMI IN regression.

Problem:
The audio hal code merge caused HDMI IN regression.
For HDMI IN, pcm_read is changed to non-block mode,
which requires tinyalsa pcm_read() return partial
written frame number. However, the tinyalsa version
on Linux is too old and it only returns 0 for blocking
mode, therefore the read frame number calculation
is wrong and the code get stuck at the input_threadloop
to read input data.

Solution:
Revert to non-blocking mode and make it a TODO to
use non-blocking mode.

Also fixed a crash issue.

Test:
Verified on ab301, HDMI IN with PCM can work correctly.

Change-Id: Idae1285824c1c620b0f79bc8c6ebacfd49079fb9
---
 audio_hal/alsa_manager.c |  4 +++-
 audio_hal/audio_hw.c     | 11 +++++++++--
 2 files changed, 12 insertions(+), 3 deletions(-)

diff --git a/audio_hal/alsa_manager.c b/audio_hal/alsa_manager.c
index 1021b48..d4a73d4 100644
--- a/audio_hal/alsa_manager.c
+++ b/audio_hal/alsa_manager.c
@@ -696,7 +696,9 @@ size_t aml_alsa_input_read(struct audio_stream_in *stream,
         ret = pcm_read(pcm_handle, (unsigned char *)buffer + read_bytes, bytes - read_bytes);
         if (ret >= 0) {
             nodata_count = 0;
-            read_bytes += ret*frame_size;
+            // LINUX Change
+            //read_bytes += ret*frame_size;
+            read_bytes += bytes - read_bytes;
             ALOGV("pcm_handle:%p, ret:%d read_bytes:%d, bytes:%d ",
                 pcm_handle,ret,read_bytes,bytes);
         } else if (ret != -EAGAIN) {
diff --git a/audio_hal/audio_hw.c b/audio_hal/audio_hw.c
index 8e854f7..029494a 100644
--- a/audio_hal/audio_hw.c
+++ b/audio_hal/audio_hw.c
@@ -3692,7 +3692,9 @@ static int start_input_stream(struct aml_stream_in *in)
         __func__, card, alsa_device, adev->in_device);
 
     /* this assumes routing is done previously */
-    in->pcm = pcm_open(card, alsa_device, PCM_IN | PCM_NONBLOCK, &in->config);
+    // LINUX Change, tinyalsa does not support return with partial written size
+    //in->pcm = pcm_open(card, alsa_device, PCM_IN | PCM_NONBLOCK, &in->config);
+    in->pcm = pcm_open(card, alsa_device, PCM_IN, &in->config);
     if (!pcm_is_ready(in->pcm)) {
         ALOGE("%s: cannot open pcm_in driver: %s", __func__, pcm_get_error(in->pcm));
         pcm_close (in->pcm);
@@ -10079,9 +10081,14 @@ ssize_t process_buffer_write(struct audio_stream_out *stream,
 /* must be called with hw device mutexes locked */
 static int usecase_change_validate_l(struct aml_stream_out *aml_out, bool is_standby)
 {
-    struct aml_audio_device *aml_dev = aml_out->dev;
+    struct aml_audio_device *aml_dev;
     bool hw_mix;
 
+    if (!aml_out)
+        return 0;
+
+    aml_dev = aml_out->dev;
+
     if (is_standby) {
         ALOGI("++[%s:%d], dev masks:%#x, is_standby:%d, out usecase:%s", __func__, __LINE__,
             aml_dev->usecase_masks, is_standby, usecase2Str(aml_out->usecase));
-- 
2.17.1

