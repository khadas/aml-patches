From d4f0756d48163da25a9ab9cbc1a1479ea8e572b8 Mon Sep 17 00:00:00 2001
From: "yongchun.li" <yongchun.li@amlogic.com>
Date: Wed, 26 Aug 2020 23:37:11 -0700
Subject: [PATCH] qsecmemallocator: add API to get available sec buffer size
 [1/1]

PD#SWPL-31275

Problem:
secure memory could be used up when upper layer continue feeding
then cause error. need upper layer know how much space available

Solution:
Implement used memory size in buffer pool
Add get_free_buf_size() API.

Verify:
U212 + RDK + Youtube "free to watch with ads" movies

Change-Id: I5773b27f2f9ce1dcb23ee87abf6d0cb930f3eb0e
Signed-off-by: yongchun.li <yongchun.li@amlogic.com>
---
 .../src/secmem/gstsecmemallocator.c                | 35 +++++++++++++++-------
 .../src/secmem/gstsecmemallocator.h                |  2 ++
 2 files changed, 26 insertions(+), 11 deletions(-)

diff --git a/gst-aml-drm-plugins-1.0/src/secmem/gstsecmemallocator.c b/gst-aml-drm-plugins-1.0/src/secmem/gstsecmemallocator.c
index a475424..a69f527 100644
--- a/gst-aml-drm-plugins-1.0/src/secmem/gstsecmemallocator.c
+++ b/gst-aml-drm-plugins-1.0/src/secmem/gstsecmemallocator.c
@@ -13,18 +13,11 @@
 #include "secmem_ca.h"
 
 #define MAX_BUFS_COUNT    (511)
+#define MAX_SEC_MEMSZ     (16*1024*1024)
 
 GST_DEBUG_CATEGORY_STATIC (gst_secmem_allocator_debug);
 #define GST_CAT_DEFAULT gst_secmem_allocator_debug
 
-typedef struct
-{
-    GstMemory mem;
-    secmem_handle_t handle;
-    secmem_paddr_t phyaddr;
-} GstSecmemMemory;
-
-
 #define gst_secmem_allocator_parent_class parent_class
 G_DEFINE_TYPE (GstSecmemAllocator, gst_secmem_allocator, GST_TYPE_DMABUF_ALLOCATOR);
 
@@ -57,6 +50,7 @@ gst_secmem_allocator_init (GstSecmemAllocator * self)
     g_mutex_init (&self->mutex);
     g_cond_init (&self->cond);
     self->counter = 0;
+    self->total_used = 0;
     allocator->mem_type = GST_ALLOCATOR_SECMEM;
     allocator->mem_map = gst_secmem_mem_map;
     allocator->mem_unmap = gst_secmem_mem_unmap;
@@ -85,7 +79,7 @@ gst_secmem_mem_alloc (GstAllocator * allocator, gsize size,
     int fd;
     secmem_handle_t handle;
     unsigned int ret;
-    uint32_t maxsize;
+    uint32_t maxsize = 0;
 
     g_return_val_if_fail (GST_IS_SECMEM_ALLOCATOR (allocator), NULL);
     g_return_val_if_fail(self->sess != NULL, NULL);
@@ -117,7 +111,8 @@ gst_secmem_mem_alloc (GstAllocator * allocator, gsize size,
         goto error_export;
     }
     mem->size = size;
-    GST_INFO("alloc dma %d", fd);
+    GST_INFO("alloc dma %d maxsize %d", fd, maxsize);
+    self->total_used += maxsize;
     self->counter++;
     g_mutex_unlock (&self->mutex);
     return mem;
@@ -134,14 +129,19 @@ error_create:
 void
 gst_secmem_mem_free(GstAllocator *allocator, GstMemory *memory)
 {
+    gsize maxsize = 0, size;
     GstSecmemAllocator *self = GST_SECMEM_ALLOCATOR (allocator);
     g_mutex_lock (&self->mutex);
     int fd = gst_fd_memory_get_fd(memory);
     secmem_handle_t handle = Secure_V2_FdToHandle(self->sess, fd);
-    GST_INFO("free dma %d", gst_fd_memory_get_fd(memory));
+
+    size = gst_memory_get_sizes (memory, NULL, &maxsize);
+
+    GST_INFO("free dma %d size %d max size %d", fd, size, maxsize);
     GST_ALLOCATOR_CLASS (parent_class)->free(allocator, memory);
     Secure_V2_MemFree(self->sess, handle);
     Secure_V2_MemRelease(self->sess, handle);
+    self->total_used -= maxsize;
     self->counter--;
     g_cond_broadcast (&self->cond);
     g_mutex_unlock (&self->mutex);
@@ -338,3 +338,16 @@ gint gst_secmem_get_free_buf_num(GstMemory *mem)
     return cnt;
 
 }
+
+gint gst_secmem_get_free_buf_size(GstMemory *mem)
+{
+    gint sz;
+    g_return_val_if_fail(mem != NULL, -1);
+    g_return_val_if_fail(GST_IS_SECMEM_ALLOCATOR (mem->allocator), -1);
+
+    GstSecmemAllocator *self = GST_SECMEM_ALLOCATOR (mem->allocator);
+    g_mutex_lock (&self->mutex);
+    sz = MAX_SEC_MEMSZ - self->total_used;
+    g_mutex_unlock (&self->mutex);
+    return sz;
+}
diff --git a/gst-aml-drm-plugins-1.0/src/secmem/gstsecmemallocator.h b/gst-aml-drm-plugins-1.0/src/secmem/gstsecmemallocator.h
index 88e57dd..b4e9f4a 100644
--- a/gst-aml-drm-plugins-1.0/src/secmem/gstsecmemallocator.h
+++ b/gst-aml-drm-plugins-1.0/src/secmem/gstsecmemallocator.h
@@ -43,6 +43,7 @@ struct _GstSecmemAllocator
     gboolean                is_4k;
     gboolean                is_vp9;
     gsize                   counter;
+    gsize                   total_used;
     GCond                   cond;
     GMutex                  mutex;
 };
@@ -62,6 +63,7 @@ gboolean        gst_secmem_parse_avcc(GstMemory *mem, uint8_t *buffer, uint32_t
 gboolean        gst_secmem_parse_avc2nalu(GstMemory *mem, uint32_t *flag);
 gboolean        gst_secmem_parse_vp9(GstMemory *mem);
 gint            gst_secmem_get_free_buf_num(GstMemory *mem);
+gint            gst_secmem_get_free_buf_size(GstMemory *mem);
 secmem_handle_t gst_secmem_memory_get_handle (GstMemory *mem);
 secmem_paddr_t  gst_secmem_memory_get_paddr (GstMemory *mem);
 G_END_DECLS
-- 
2.7.4

