From e8380c253e3fe025c2fb3752f4b096fe457b62fc Mon Sep 17 00:00:00 2001
From: "haotian.qu" <haotian.qu@amlogic.com>
Date: Tue, 21 May 2024 17:21:29 +0800
Subject: [PATCH 9/9] swupdate: krikstone support absystem [1/1]

PD#SWPL-170412

Problem:
1.The previous patch changed, causing the
later patch application to fail.
2.Modify the partition numbers when enable
absystem.

Solution:
1.Redo patch.
2.Modify the partition numbers in 'block.rules'.

Verify:
local PB

Change-Id: Ie530b72616b378320110fe3c2fe8b3685a4b0099
Signed-off-by: haotian.qu <haotian.qu@amlogic.com>
---
 recipes-core/images/aml-package.inc           | 12 +--
 .../images/files/partition_table_ab.txt       |  4 +-
 ...0001-amlogic-update-based-on-2021.04.patch | 10 +-
 .../swupdate/0002-fix-compile-warnings.patch  |  6 +-
 ...5-amlogic-add-rootfs_vendor-absystem.patch |  6 +-
 ...06-amlogic-fix-absystem-update-error.patch | 30 +++---
 .../0007-amlogic-absystem-uboot-update.patch  | 99 +++++++++++++++++++
 recipes-core/swupdate/swupdate_git.bb         |  3 +-
 .../udev/udev-extraconf/block_ab.rules        |  3 +
 recipes-core/udev/udev-extraconf_%.bbappend   |  7 +-
 10 files changed, 142 insertions(+), 38 deletions(-)
 create mode 100644 recipes-core/swupdate/swupdate/0007-amlogic-absystem-uboot-update.patch
 create mode 100644 recipes-core/udev/udev-extraconf/block_ab.rules

diff --git a/recipes-core/images/aml-package.inc b/recipes-core/images/aml-package.inc
index 4e4ea506..ad757ffb 100644
--- a/recipes-core/images/aml-package.inc
+++ b/recipes-core/images/aml-package.inc
@@ -212,17 +212,11 @@ do_aml_pack() {
         sed 's@boardname@${MACHINE_ARCH}@' -i ${DEPLOY_DIR_IMAGE}/sw-description
         sed 's@_lib32_@_@' -i ${DEPLOY_DIR_IMAGE}/sw-description
         sed 's@_k5.15@@' -i ${DEPLOY_DIR_IMAGE}/sw-description
-        if ${@bb.utils.contains('DISTRO_FEATURES', 'kernel_515', 'true', 'false', d)}; then
-            if ${@bb.utils.contains('DISTRO_FEATURES', 'nand', 'false', 'true', d)}; then
+        if ${@bb.utils.contains('DISTRO_FEATURES', 'nand', 'false', 'true', d)}; then
+            if ${@bb.utils.contains('DISTRO_FEATURES', 'absystem', 'false', 'true', d)}; then
                 sed 's@bootloader@bootloader_up@' -i ${DEPLOY_DIR_IMAGE}/sw-description
-                sed 's@value = "1";@value = "2";@' -i ${DEPLOY_DIR_IMAGE}/sw-description
-            fi
-        fi
-        if ${@bb.utils.contains('DISTRO_FEATURES', 'kernel_66', 'true', 'false', d)}; then
-            if ${@bb.utils.contains('DISTRO_FEATURES', 'nand', 'false', 'true', d)}; then
-                sed 's@bootloader@bootloader_up@' -i ${DEPLOY_DIR_IMAGE}/sw-description
-                sed 's@value = "1";@value = "2";@' -i ${DEPLOY_DIR_IMAGE}/sw-description
             fi
+            sed 's@value = "1";@value = "2";@' -i ${DEPLOY_DIR_IMAGE}/sw-description
         fi
         if ${@bb.utils.contains('DISTRO_FEATURES', 'swupdate-enc', 'true', 'false', d)}; then
             ${DEPLOY_DIR_IMAGE}/sw_enc_package_create.sh ${DEPLOY_DIR_IMAGE}
diff --git a/recipes-core/images/files/partition_table_ab.txt b/recipes-core/images/files/partition_table_ab.txt
index bfe806a7..6e70e1b2 100644
--- a/recipes-core/images/files/partition_table_ab.txt
+++ b/recipes-core/images/files/partition_table_ab.txt
@@ -2,6 +2,8 @@
 //ab don't need cache, but dts part will add 8M for it
 reserved,36M,64M,8M,0
 env,-,8M,8M,0
+bootloader_a,-,8M,8M,0x0001
+bootloader_b,-,8M,8M,0x0001
 logo,-,8M,8M,0x0001
 recovery_a,-,40M,8M,0x0001
 recovery_b,-,40M,8M,0x0001
@@ -21,4 +23,4 @@ odm,-,128M,8M,0x0001
 system_a,-,1536M,8M,0x0001
 system_b,-,1536M,8M,0x0001
 product,-,128M,8M,0x0001
-data,-,-,8M,0x0004
\ No newline at end of file
+data,-,-,8M,0x0004
diff --git a/recipes-core/swupdate/swupdate/0001-amlogic-update-based-on-2021.04.patch b/recipes-core/swupdate/swupdate/0001-amlogic-update-based-on-2021.04.patch
index e1161150..9029bb7d 100644
--- a/recipes-core/swupdate/swupdate/0001-amlogic-update-based-on-2021.04.patch
+++ b/recipes-core/swupdate/swupdate/0001-amlogic-update-based-on-2021.04.patch
@@ -1180,8 +1180,8 @@ index 619a2f47..edb5b5f0 100644
 +  BLK2BOOT1,
 +};
 +
-+static int sEmmcPartionIndex = -1;
-+static const char *sEmmcPartionName[] = {
++static int sEmmcPartitionIndex = -1;
++static const char *sEmmcPartitionName[] = {
 +  EMMC_USER_PARTITION,
 +  EMMC_BLK0BOOT0_PARTITION,
 +  EMMC_BLK0BOOT1_PARTITION,
@@ -1305,9 +1305,9 @@ index 619a2f47..edb5b5f0 100644
 +
 +  unsigned int i = 0;
 +  char emmcPartitionPath[128];
-+  for (i = USER; i < ARRAY_SIZE(sEmmcPartionName); i ++) {
++  for (i = USER; i < ARRAY_SIZE(sEmmcPartitionName); i ++) {
 +	memset(emmcPartitionPath, 0, sizeof(emmcPartitionPath));
-+	sprintf(emmcPartitionPath, "/dev/%s", sEmmcPartionName[i]);
++	sprintf(emmcPartitionPath, "/dev/%s", sEmmcPartitionName[i]);
 +
 +	if (!access(emmcPartitionPath, F_OK)) {
 +	  printf("write %s to %s.\n", img->fname, emmcPartitionPath);
@@ -1406,7 +1406,7 @@ index 619a2f47..edb5b5f0 100644
 +	}
 +
 +	//if a/b system and write boot partition
-+	if (((strcmp(img->fname, "boot.img")==0) || ((img->fname, "fip-bl33.bin")==0)) && (get_system_type()==0)) {
++	if (((strcmp(img->fname, "boot.img")==0) || (strcmp(img->fname, "fip-bl33.bin")==0)) && (get_system_type()==0)) {
 +		char *part=(strcmp(img->fname, "boot.img")==0)?"boot":"fip";return install_boot_ab(part, img);
 +	}
 +
diff --git a/recipes-core/swupdate/swupdate/0002-fix-compile-warnings.patch b/recipes-core/swupdate/swupdate/0002-fix-compile-warnings.patch
index 14286764..595752aa 100644
--- a/recipes-core/swupdate/swupdate/0002-fix-compile-warnings.patch
+++ b/recipes-core/swupdate/swupdate/0002-fix-compile-warnings.patch
@@ -149,9 +149,9 @@ index 2451c07..9b2c434 100644
    BLK2BOOT1,
  };
  
--static int sEmmcPartionIndex = -1;
-+//static int sEmmcPartionIndex = -1;
- static const char *sEmmcPartionName[] = {
+-static int sEmmcPartitionIndex = -1;
++//static int sEmmcPartitionIndex = -1;
+ static const char *sEmmcPartitionName[] = {
    EMMC_USER_PARTITION,
    EMMC_BLK0BOOT0_PARTITION,
 @@ -221,7 +222,7 @@ static int blkprotect(struct img_type *img, bool on)
diff --git a/recipes-core/swupdate/swupdate/0005-amlogic-add-rootfs_vendor-absystem.patch b/recipes-core/swupdate/swupdate/0005-amlogic-add-rootfs_vendor-absystem.patch
index ed33503e..b4d05a62 100644
--- a/recipes-core/swupdate/swupdate/0005-amlogic-add-rootfs_vendor-absystem.patch
+++ b/recipes-core/swupdate/swupdate/0005-amlogic-add-rootfs_vendor-absystem.patch
@@ -1,11 +1,11 @@
 diff --git a/handlers/raw_handler.c b/handlers/raw_handler.c
-index 52f2500..f72d68d 100644
+index 0ab46566..f342ad2b 100644
 --- a/handlers/raw_handler.c
 +++ b/handlers/raw_handler.c
-@@ -230,7 +230,8 @@ static int blkprotect(struct img_type *img, bool on)
+@@ -246,7 +246,8 @@ static int blkprotect(struct img_type *img, bool on)
  
  //try a/b system
- if (get_active_slot(&slot)==0 && ((strcmp(img->fname, "boot.img")==0) ||
+ if (get_active_slot(&slot)==0 && ((strcmp(img->fname, "boot.img")==0) || (strcmp(img->fname, "fip-bl33.bin")==0) ||
 - (strcmp(img->fname, "recovery.img")==0) || (strcmp(img->fname, "vbmeta.img")==0))) {
 + (strcmp(img->fname, "recovery.img")==0) || (strcmp(img->fname, "vbmeta.img")==0) ||
 + (strncmp(img->fname, "rootfs", 6)==0) || (strncmp(img->fname, "vendor", 6)==0))) {
diff --git a/recipes-core/swupdate/swupdate/0006-amlogic-fix-absystem-update-error.patch b/recipes-core/swupdate/swupdate/0006-amlogic-fix-absystem-update-error.patch
index b044f11d..dff16aa1 100644
--- a/recipes-core/swupdate/swupdate/0006-amlogic-fix-absystem-update-error.patch
+++ b/recipes-core/swupdate/swupdate/0006-amlogic-fix-absystem-update-error.patch
@@ -1,29 +1,33 @@
 diff --git a/handlers/raw_handler.c b/handlers/raw_handler.c
-index 52f2500..22f480f 100644
+index f342ad2b..42123aae 100644
 --- a/handlers/raw_handler.c
 +++ b/handlers/raw_handler.c
-@@ -332,8 +332,8 @@ static int install_raw_image(struct img_type *img,
- 		return install_boot_ab(img);
+@@ -349,8 +349,8 @@ static int install_raw_image(struct img_type *img,
+ 		char *part=(strcmp(img->fname, "boot.img")==0)?"boot":"fip";return install_boot_ab(part, img);
  	}
  
 -	fdout = open(img->device, O_RDWR);
 -	if (fdout < 0) {
-+	if ((get_system_type()==0) && ((strcmp(img->fname, "recovery.img")==0) || (strcmp(img->fname, "vbmeta.img")==0) ||
++  if ((get_system_type()==0) && ((strcmp(img->fname, "recovery.img")==0) || (strcmp(img->fname, "vbmeta.img")==0) ||
 + 			(strncmp(img->fname, "rootfs", 6)==0) || (strncmp(img->fname, "vendor", 6)==0))) {
  		//try a/b  system
  		ret = get_active_slot(&slot);
  		if (ret != 0) {
-@@ -353,6 +353,13 @@ static int install_raw_image(struct img_type *img,
+@@ -369,8 +369,15 @@ static int install_raw_image(struct img_type *img,
+ 			TRACE("Device %s cannot be opened: %s",
  				img->device, strerror(errno));
  			return -ENODEV;
- 		}
+-		}
+-	}
++    }
 +	} else {
-+		fdout = open(img->device, O_RDWR);
-+		if (fdout < 0) {
-+			TRACE("Device %s cannot be opened: %s",
-+				img->device, strerror(errno));
-+			return -ENODEV;
-+		}
- 	}
++      fdout = open(img->device, O_RDWR);
++      if (fdout < 0) {
++          TRACE("Device %s cannot be opened: %s",
++              img->device, strerror(errno));
++          return -ENODEV;
++      }
++  }
  #if defined(__FreeBSD__)
  	ret = copyimage(&fdout, img, copy_write_padded);
+ #else
diff --git a/recipes-core/swupdate/swupdate/0007-amlogic-absystem-uboot-update.patch b/recipes-core/swupdate/swupdate/0007-amlogic-absystem-uboot-update.patch
new file mode 100644
index 00000000..1640e6b1
--- /dev/null
+++ b/recipes-core/swupdate/swupdate/0007-amlogic-absystem-uboot-update.patch
@@ -0,0 +1,99 @@
+diff --git a/handlers/flash_handler.c b/handlers/flash_handler.c
+index 420ae837..a6b823df 100644
+--- a/handlers/flash_handler.c
++++ b/handlers/flash_handler.c
+@@ -368,9 +368,9 @@ static int flash_write_boot(struct img_type *img) {
+ 
+     //get boot_a/b mtdnum
+     if (slot == 0) {
+-        ret = (strcmp(img->fname, "boot.img")==0)?get_mtd_by_name("boot_b"):get_mtd_by_name("fip_b");
++        ret = (strncmp(img->fname, "boot", 4)==0)?get_mtd_by_name("boot_b"):get_mtd_by_name("fip_b");
+     } else {
+-        ret = (strcmp(img->fname, "boot.img")==0)?get_mtd_by_name("boot_a"):get_mtd_by_name("fip_a");
++        ret = (strncmp(img->fname, "boot", 4)==0)?get_mtd_by_name("boot_a"):get_mtd_by_name("fip_a");
+     }
+ 
+     if (ret < 0) {
+@@ -400,7 +400,7 @@ static int install_flash_image(struct img_type *img,
+ 	int mtdnum;
+ 
+ 	//if a/b boot, need to write boot_a or boot_b
+-	if (((strcmp(img->fname, "boot.img")==0) || (strcmp(img->fname, "fip-bl33.bin")==0)) && (get_system_type()==0)) {
++	if (((strncmp(img->fname, "boot", 4)==0) || (strncmp(img->fname, "fip-bl33", 8)==0)) && (get_system_type()==0)) {
+ 		return flash_write_boot(img);
+ 	}
+ 
+@@ -415,13 +415,13 @@ static int install_flash_image(struct img_type *img,
+ 	}
+ 
+ #if 0
+-    if (strcmp(img->fname, "u-boot.bin.usb.bl2")==0) {
++    if (strncmp(img->fname, "u-boot.bin.usb.bl2", 18)==0) {
+        if(flash_erase_offset_size(mtdnum, img->seek, BL2_SIZE)) {
+            ERROR("I cannot erasing %s",
+                img->device);
+            return -1;
+        }
+-    } else if (strcmp(img->fname, "u-boot.bin.usb.tpl")==0) {
++    } else if (strncmp(img->fname, "u-boot.bin.usb.tpl", 18)==0) {
+        if(flash_erase_offset_size(mtdnum, img->seek, TPL_SIZE)) {
+            ERROR("I cannot erasing %s",
+                img->device);
+diff --git a/handlers/raw_handler.c b/handlers/raw_handler.c
+index 9bb93780..9abfc96a 100644
+--- a/handlers/raw_handler.c
++++ b/handlers/raw_handler.c
+@@ -49,15 +49,12 @@ enum emmcPartition {
+   BLK2BOOT1,
+ };
+ 
+-//static int sEmmcPartitionIndex = -1;
++/* For GPT partition absystem, bootloader update */
++#define EMMC_BOOTLOADER_A          "bootloader_a"
++#define EMMC_BOOTLOADER_B          "bootloader_b"
+ static const char *sEmmcPartitionName[] = {
+-  EMMC_USER_PARTITION,
+-  EMMC_BLK0BOOT0_PARTITION,
+-  EMMC_BLK0BOOT1_PARTITION,
+-  EMMC_BLK1BOOT0_PARTITION,
+-  EMMC_BLK1BOOT1_PARTITION,
+-  EMMC_BLK2BOOT0_PARTITION,
+-  EMMC_BLK2BOOT1_PARTITION,
++  EMMC_BOOTLOADER_A,
++  EMMC_BOOTLOADER_B,
+ };
+ 
+ 
+@@ -245,8 +242,8 @@ static int blkprotect(struct img_type *img, bool on)
+ 	}
+ 
+ //try a/b system
+-if (get_active_slot(&slot)==0 && ((strcmp(img->fname, "boot.img")==0) || (strcmp(img->fname, "fip-bl33.bin")==0) ||
+- (strcmp(img->fname, "recovery.img")==0) || (strcmp(img->fname, "vbmeta.img")==0) ||
++if (get_active_slot(&slot)==0 && ((strncmp(img->fname, "boot", 4)==0) || (strncmp(img->fname, "fip-bl33", 8)==0) ||
++ (strncmp(img->fname, "recovery", 8)==0) || (strncmp(img->fname, "vbmeta", 8)==0) ||
+  (strncmp(img->fname, "rootfs", 6)==0) || (strncmp(img->fname, "vendor", 6)==0))) {
+ 	if (slot == 0) {
+ 		sprintf(device_name, "%s%s", img->device, "_b");
+@@ -339,17 +336,16 @@ static int install_raw_image(struct img_type *img,
+ 	int slot = 0;
+ 	char device_name[256];
+ 	// bootloader maybe need to seek 512 byte
+-	if ((strcmp(img->fname, "u-boot.bin")==0) || (strcmp(img->fname, "u-boot.bin.signed")==0)
+-	|| (strcmp(img->fname, "u-boot.bin.encrypt")==0)) {
++	if (strncmp(img->fname, "u-boot.bin", 10)==0) {
+ 		return install_bootloader(img);
+ 	}
+ 
+ 	//if a/b system and write boot partition
+-	if (((strcmp(img->fname, "boot.img")==0) || (strcmp(img->fname, "fip-bl33.bin")==0)) && (get_system_type()==0)) {
+-		char *part=(strcmp(img->fname, "boot.img")==0)?"boot":"fip";return install_boot_ab(part, img);
++	if (((strncmp(img->fname, "boot", 4)==0) || (strncmp(img->fname, "fip-bl33", 8)==0)) && (get_system_type()==0)) {
++		char *part=(strncmp(img->fname, "boot", 4)==0)?"boot":"fip";return install_boot_ab(part, img);
+ 	}
+ 
+-  if ((get_system_type()==0) && ((strcmp(img->fname, "recovery.img")==0) || (strcmp(img->fname, "vbmeta.img")==0) ||
++  if ((get_system_type()==0) && ((strncmp(img->fname, "recovery", 8)==0) || (strncmp(img->fname, "vbmeta", 6)==0) ||
+  			(strncmp(img->fname, "rootfs", 6)==0) || (strncmp(img->fname, "vendor", 6)==0))) {
+ 		//try a/b  system
+ 		ret = get_active_slot(&slot);
diff --git a/recipes-core/swupdate/swupdate_git.bb b/recipes-core/swupdate/swupdate_git.bb
index 5f735f95..c5d975de 100644
--- a/recipes-core/swupdate/swupdate_git.bb
+++ b/recipes-core/swupdate/swupdate_git.bb
@@ -39,7 +39,8 @@ SRC_URI = "git://github.com/sbabic/swupdate.git;branch=master;protocol=https \
 
 SRC_URI += "${@bb.utils.contains("DISTRO_FEATURES", "absystem", \
         "file://0005-amlogic-add-rootfs_vendor-absystem.patch \
-         file://0006-amlogic-fix-absystem-update-error.patch", "", d)}"
+         file://0006-amlogic-fix-absystem-update-error.patch \
+         file://0007-amlogic-absystem-uboot-update.patch ", "", d)}"
 SRC_URI += "${@bb.utils.contains("DISTRO_FEATURES", "nand", \
             bb.utils.contains("ROOTFS_TYPE", "ubifs", "file://ubifs.cfg", "file://squashfs.cfg", d), "", d)}"
 
diff --git a/recipes-core/udev/udev-extraconf/block_ab.rules b/recipes-core/udev/udev-extraconf/block_ab.rules
new file mode 100644
index 00000000..e23a1f4d
--- /dev/null
+++ b/recipes-core/udev/udev-extraconf/block_ab.rules
@@ -0,0 +1,3 @@
+KERNEL=="mmcblk0p16", SYMLINK+="vendor"
+KERNEL=="mmcblk0p15", SYMLINK+="factory"
+KERNEL=="mmcblk0p14", SYMLINK+="tee"
diff --git a/recipes-core/udev/udev-extraconf_%.bbappend b/recipes-core/udev/udev-extraconf_%.bbappend
index 299f5964..64a57fae 100644
--- a/recipes-core/udev/udev-extraconf_%.bbappend
+++ b/recipes-core/udev/udev-extraconf_%.bbappend
@@ -7,9 +7,7 @@ SRC_URI:append = " \
 "
 SRC_URI:append = " \
     ${@bb.utils.contains('DISTRO_FEATURES', 'nand', '', \
-    bb.utils.contains('DISTRO_FEATURES', 'kernel_515', 'file://block.rules', '', d),  d)} \
-    ${@bb.utils.contains('DISTRO_FEATURES', 'nand', '', \
-    bb.utils.contains('DISTRO_FEATURES', 'kernel_66', 'file://block.rules', '', d),  d)} \
+    bb.utils.contains('DISTRO_FEATURES', 'absystem', 'file://block_ab.rules', 'file://block.rules', d), d)} \
 "
 SRC_URI:append = " \
     ${@bb.utils.contains('DISTRO_FEATURES', 'kernel_515', 'file://dmaheap.rules', '', d)} \
@@ -36,6 +34,9 @@ do_install:append () {
     if [ -e "${WORKDIR}/block.rules" ]; then
       echo "/dev/mmcblk0*" >> ${D}${sysconfdir}/udev/mount.ignorelist
       install -m 0644 ${WORKDIR}/block.rules ${D}${sysconfdir}/udev/rules.d
+    elif [ -e "${WORKDIR}/block_ab.rules" ]; then
+      echo "/dev/mmcblk0*" >> ${D}${sysconfdir}/udev/mount.ignorelist
+      install -m 0644 ${WORKDIR}/block_ab.rules ${D}${sysconfdir}/udev/rules.d/block.rules
     fi
     if ${@bb.utils.contains_any('DISTRO_FEATURES', ['bluetooth', 'wifi'], 'true', 'false', d)}; then
         install -d ${D}${sysconfdir}/udev/rules.d
-- 
2.25.1

