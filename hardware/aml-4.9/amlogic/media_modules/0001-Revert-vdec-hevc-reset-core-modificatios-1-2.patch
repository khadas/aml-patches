From 25736af9aa15f2b7327dd003092b97117c8e78ea Mon Sep 17 00:00:00 2001
From: Song Zhao <song.zhao@amlogic.com>
Date: Wed, 12 Aug 2020 14:12:54 -0700
Subject: [PATCH] Revert "vdec: hevc reset core modificatios [1/2]"

This reverts commit 0e9f26a7606f776a3df14b784ae51b40ee54f470.

Change-Id: Ifb502b86efea37af0c2c3913b5d42bc8c606a01d
---
 drivers/frame_provider/decoder/utils/vdec.c | 48 ++---------------------------
 1 file changed, 2 insertions(+), 46 deletions(-)

diff --git a/drivers/frame_provider/decoder/utils/vdec.c b/drivers/frame_provider/decoder/utils/vdec.c
index 1f9e0d9..8a7c819 100644
--- a/drivers/frame_provider/decoder/utils/vdec.c
+++ b/drivers/frame_provider/decoder/utils/vdec.c
@@ -131,8 +131,6 @@ static DEFINE_SPINLOCK(vdec_spin_lock);
 #define PRINT_FRAME_INFO 1
 #define DISABLE_FRAME_INFO 2
 
-#define RESET7_REGISTER_LEVEL 0x1127
-
 static int frameinfo_flag = 0;
 static int v4lvideo_add_di = 1;
 static int max_di_instance = 2;
@@ -3647,7 +3645,6 @@ void hevc_reset_core(struct vdec_s *vdec)
 {
 	unsigned long flags;
 	unsigned int mask = 0;
-	int cpu_type;
 
 	mask = 1 << 4; /*bit4: hevc*/
 	if (get_cpu_major_id() >= AM_MESON_CPU_MAJOR_ID_G12A)
@@ -3672,16 +3669,11 @@ void hevc_reset_core(struct vdec_s *vdec)
 	if (vdec == NULL || input_frame_based(vdec))
 		WRITE_VREG(HEVC_STREAM_CONTROL, 0);
 
-
-	WRITE_VREG(HEVC_SAO_MMU_RESET_CTRL,
-			READ_VREG(HEVC_SAO_MMU_RESET_CTRL) | 1);
-
 		/*
 	 * 2: assist
 	 * 3: parser
 	 * 4: parser_state
 	 * 8: dblk
-	 * 10:wrrsp lmem
 	 * 11:mcpu
 	 * 12:ccpu
 	 * 13:ddr
@@ -3691,49 +3683,13 @@ void hevc_reset_core(struct vdec_s *vdec)
 	 * 18:mpred
 	 * 19:sao
 	 * 24:hevc_afifo
-	 * 26:rst_mmu_n
 	 */
 	WRITE_VREG(DOS_SW_RESET3,
-		(1<<3)|(1<<4)|(1<<8)|(1<<10)|(1<<11)|
+		(1<<3)|(1<<4)|(1<<8)|(1<<11)|
 		(1<<12)|(1<<13)|(1<<14)|(1<<15)|
-		(1<<17)|(1<<18)|(1<<19)|(1<<24)|(1<<26));
+		(1<<17)|(1<<18)|(1<<19)|(1<<24));
 
 	WRITE_VREG(DOS_SW_RESET3, 0);
-	while (READ_VREG(HEVC_WRRSP_LMEM) & 0xfff)
-		;
-	WRITE_VREG(HEVC_SAO_MMU_RESET_CTRL,
-			READ_VREG(HEVC_SAO_MMU_RESET_CTRL) & (~1));
-	cpu_type = get_cpu_major_id();
-	if (cpu_type == AM_MESON_CPU_MAJOR_ID_TL1 &&
-			is_meson_rev_b())
-		cpu_type = AM_MESON_CPU_MAJOR_ID_G12B;
-	switch (cpu_type) {
-	case AM_MESON_CPU_MAJOR_ID_G12B:
-		WRITE_RESET_REG((RESET7_REGISTER_LEVEL),
-				READ_RESET_REG(RESET7_REGISTER_LEVEL) & (~((1<<13)|(1<<14))));
-		WRITE_RESET_REG((RESET7_REGISTER_LEVEL),
-				READ_RESET_REG((RESET7_REGISTER_LEVEL)) | ((1<<13)|(1<<14)));
-		break;
-	case AM_MESON_CPU_MAJOR_ID_G12A:
-	case AM_MESON_CPU_MAJOR_ID_SM1:
-	case AM_MESON_CPU_MAJOR_ID_TL1:
-	case AM_MESON_CPU_MAJOR_ID_TM2:
-		WRITE_RESET_REG((RESET7_REGISTER_LEVEL),
-				READ_RESET_REG(RESET7_REGISTER_LEVEL) & (~((1<<13))));
-		WRITE_RESET_REG((RESET7_REGISTER_LEVEL),
-				READ_RESET_REG((RESET7_REGISTER_LEVEL)) | ((1<<13)));
-		break;
-	#if 0
-	case AM_MESON_CPU_MAJOR_ID_SC2:
-		WRITE_RESET_REG(P_RESETCTRL_RESET5_LEVEL,
-				READ_RESET_REG(P_RESETCTRL_RESET5_LEVEL) & (~((1<<1)|(1<<12)|(1<<13))));
-		WRITE_RESET_REG(P_RESETCTRL_RESET5_LEVEL,
-				READ_RESET_REG(P_RESETCTRL_RESET5_LEVEL) | ((1<<1)|(1<<12)|(1<<13)));
-		break;
-	#endif
-	default:
-		break;
-	}
 
 
 	spin_lock_irqsave(&vdec_spin_lock, flags);
-- 
2.7.4

