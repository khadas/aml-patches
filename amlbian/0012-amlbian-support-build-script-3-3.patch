From fc9904e049b7cf4679b25a1b49b2e1745e878469 Mon Sep 17 00:00:00 2001
From: "guoping.li" <guoping.li@amlogic.com>
Date: Thu, 30 Nov 2023 18:27:12 +0800
Subject: [PATCH 12/13] amlbian: support build script [3/3]

PD#SWPL-147576

Problem:
Improve docker relative docs and script

Solution:
map the code folder in docker automatively
add error exit flow for build script

Verify:
local

Signed-off-by: guoping.li <guoping.li@amlogic.com>
Change-Id: Ia93e875f1795967e91733d363b4c5b11825097cf
---
 docs/How_to_use_Docker_build.md | 77 +++++++++++++++++++++++----------
 env/build-amlbian.sh            | 15 ++++++-
 env/build-yocto.sh              |  7 +++
 env/docker-run-debian.sh        | 36 ++++++++++++---
 4 files changed, 105 insertions(+), 30 deletions(-)

diff --git a/docs/How_to_use_Docker_build.md b/docs/How_to_use_Docker_build.md
index 9943f4f..6d37063 100755
--- a/docs/How_to_use_Docker_build.md
+++ b/docs/How_to_use_Docker_build.md
@@ -1,59 +1,88 @@
 ## How to use Docker build
 
 
-## Why use Docker build?
-many guys use the same environment, avoid environment issue.
-Because amlbian build need root privilege, so if you have no root privilege in the build server,
-you should use Docker build.
+### Why use Docker build?
+1. make sure all the guys use the same environment, avoid build environment issue.
+2. amlbian build process need root privilege, so if you have no root privilege in the build server, you MUST use Docker build.
 
 
-## Precondition
-You should have a Ubuntu machine as build server.
+### Precondition
+You should use a Ubuntu machine as host build server.
+and setup the docker environment for it.
 
-## How to build docker image(only once)
-
-Build docker image, in amlbian root folder, the same folder with Dockerfile, run
-All the guys in the same build server can share the same dockder image
-
-Download docker,you can run this command
+### install docker image(only once)
+Download docker, you can run this command
 ```bash
 $ sudo apt-get install docker.io
 ```
 
-You need to setup the docker,add docker user,you should replace $USER with your own username
+### Docker user management
+add docker user group
 ```bash
 $ sudo groupadd docker
+
+add docker user, you should replace $USER with your own username
+```bash
 $ sudo gpasswd -a $USER docker
+```
+
+delete docker user, you should replace $USER with your own username
+```bash
+$ sudo gpasswd -d $USER docker
+```
+
+list all the docker users
+```bash
+$ getent group docker
+```
+
+update user group
+```bash
 $ sudo newgrp docker
 ```
 
-Then you should run this command to create your images
+### Make docker image
+Make a docker image, all the guys in the same build server can share the same dockder image. 
 You should enter the directory where the Dockerfile is located.(default in amlbian/Dockerfile)
+The software you should installed in docker, have already config in the Dockderfile
+"amlbian_jammy:1.0" is the docker image name.
+
+```bash
+$ docker build -t amlbian_jammy:1.0 .
+Sending build context to Docker daemon  225.5MB
+Step 1/10 : FROM ubuntu:22.04
+...
+Successfully built 9791e2ba1ccb
+Successfully tagged amlbian_jammy:1.0
+```
+
+Check the docker iamges information
 ```bash
-$ docker build -t DockerImageName .
+$ docker images
+amlbian_jammy         1.0        9791e2ba1ccb   9 months ago    2.52GB
 ```
 
-in docker-run-debian.sh files
-change  "amlbian_jammy:1.0" to your DockerImageName, such as:
+### prepare the shell script to build amlbian
+in amlbian/env/docker-run-debian.sh files
+if you use "amlbian_jammy:1.0" as the docker image name, you needn't change.
+if you use DockerImageName as docker image name, you should replace the following line:
+```bash
 DOCKER_RUN+="amlbian_jammy:1.0"
 =>
 DOCKER_RUN+="DockerImageName"
+```
 
 
-## How to build amlbian
+### How to build amlbian
 Run docker build
 ```bash
 $ ./docker-run-debian.sh
 ```
 
-You should put "-v /mnt/fileroot/$(whoami):/mnt/fileroot/$(whoami)\" in docker-run-debian.sh
-Replace "/mnt/fileroot/$(whoami)" with your own amlbian code path,
-"/mnt/fileroot/$(whoami)" is the path you will mount to docker
-
 for more details help, you can use ./docker-run-debian.sh with no parameters for help information
 
 
-## More information
-Ubuntu 22.04 should change default GCC version to 9.0
+### More information
+linux 5.15 kernel should be build in GCC 9.0, so we config the Dockerfile to change GCC version to 9.0.
 
 
diff --git a/env/build-amlbian.sh b/env/build-amlbian.sh
index 2022c53..6771d55 100755
--- a/env/build-amlbian.sh
+++ b/env/build-amlbian.sh
@@ -124,6 +124,13 @@ echo "work_board:"$work_board
 ###############################build yocto###################################
 datename=$(date +%Y%m%d)-$(date +%H%M%S)
 ./build-yocto.sh $work_board "debian" $selected_build_type 2>&1 | tee log/build-yocto-$datename.txt
+if [ $? -eq 0 ]
+then
+	echo "build-yocto.sh Successfully"
+else
+	echo "build-yocto.sh Failure"
+	exit 1
+fi
 
 pwd
 
@@ -136,6 +143,12 @@ if [ $selected_build_type == "cleanbuild" ]; then
 fi
 
 ./docker-run-debian.sh $selected_config_file
-
+if [ $? -eq 0 ]
+then
+	echo "docker-run-debian.sh Successfully"
+else
+	echo "docker-run-debian.sh Failure"
+	exit 1
+fi
 
 
diff --git a/env/build-yocto.sh b/env/build-yocto.sh
index 4d1d654..a320a8f 100755
--- a/env/build-yocto.sh
+++ b/env/build-yocto.sh
@@ -128,6 +128,13 @@ cd ..
 if [ $BUILD_TARGET_OS == "debian" ]; then
 	# copy debs to amlbian
 	./copy_debs_from_yocto.sh
+	if [ $? -eq 0 ]
+	then
+		echo "copy_debs_from_yocto Successfully"
+	else
+		echo "copy_debs_from_yocto Failure"
+		exit 1
+	fi
 fi
 
 
diff --git a/env/docker-run-debian.sh b/env/docker-run-debian.sh
index 5c098f3..e7b6438 100755
--- a/env/docker-run-debian.sh
+++ b/env/docker-run-debian.sh
@@ -23,15 +23,40 @@ DOCKER_RUN="docker run -it --name $CONTAINER_NAME \
 	--rm
     -v $(pwd):$(pwd) \
     -v /home/$(whoami):/home/$(whoami) \
-    -v /mnt/fileroot/$(whoami):/mnt/fileroot/$(whoami) \
-    -v /mnt/fileroot2/$(whoami):/mnt/fileroot2/$(whoami) \
+    "
+
+#add all top path to docker
+#add all soft link to docker
+WORK_DIR=$(pwd)
+echo "WORK_DIR:"$WORK_DIR
+PARENT_DIR=$WORK_DIR
+echo "PARENT_DIR:"$PARENT_DIR
+while [[ -n $PARENT_DIR ]] && [[ ! "$PARENT_DIR" == "/" ]]; do 
+	DOCKER_RUN+="-v $PARENT_DIR:$PARENT_DIR "
+	cd ..
+	PARENT_DIR=$(pwd)
+
+	LINK_DIR=$(readlink $PARENT_DIR)
+	LINK_DIR=$(echo $(echo $LINK_DIR))
+	echo "PARENT_DIR: "$PARENT_DIR
+	echo "LINK_DIR: "$LINK_DIR
+	if [ -n $LINK_DIR ] && [ ! ${#LINK_DIR} -eq 0 ]; then
+		echo "LINK_DIR: "$LINK_DIR
+		DOCKER_RUN+="-v $LINK_DIR:$LINK_DIR "
+	fi
+done
+# back to pwd
+cd $WORK_DIR
+
+#Environment required for configuring containers
+DOCKER_RUN+="
     -v ~/.gitconfig:/home/$(whoami)/.gitconfig \
     -v /etc/localtime:/etc/localtime:ro \
     -v /etc/timezone:/etc/timezone:ro \
     -v $HOME/.ccache:/home/$(whoami)/.ccache --privileged \
-    --device=/dev/loop-control:/dev/loop-control \
-    --device=/dev/loop0:/dev/loop0 --cap-add SYS_ADMIN \
-    "
+	--device=/dev/loop-control:/dev/loop-control \
+	--device=/dev/loop0:/dev/loop0 --cap-add SYS_ADMIN \
+	"
 
 if [ -n "${https_proxy}" ]; then
     DOCKER_RUN+="-e http_proxy=http://${https_proxy} -e https_proxy=http://${https_proxy} \
@@ -40,6 +65,7 @@ fi
 
 DOCKER_RUN+="amlbian_jammy:1.0"
 
+echo "DOCKER_RUN:"$DOCKER_RUN
 
 ## Display parameters
 display_help() {
-- 
2.25.1

