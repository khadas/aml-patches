From f7cbcf015fa91d8efcb548cf8def9ad725410972 Mon Sep 17 00:00:00 2001
From: "guoping.li" <guoping.li@amlogic.com>
Date: Tue, 30 May 2023 15:36:26 +0800
Subject: [PATCH 8/9] Amlbian: support ROS2 [3/4]

PD#SWPL-126024

Problem:
remove jpeg-tube....
install ROS2

Solution:
fix all install conflict issue, such as jpeg tube.
forcell install ROS2

Verify:
check ROS work well

Signed-off-by: guoping.li <guoping.li@amlogic.com>
Change-Id: I737f0e2e3112480e5500434d19d99c9082e1d6c3
---
 archives/features/test/gpu-test/readme.txt    |  12 +
 .../install-test/docker/install-docker.sh     |  18 +-
 .../test/install-test/ros2/install-ros2.sh    | 112 +++++++
 .../test/install-test/ros2/readme.txt         |  25 ++
 .../features/test/system/performance-info.sh  |  14 +
 .../test/system/set-performance-mode.sh       |  17 +-
 archives/features/test/system/system-info.sh  |  23 +-
 config/functions/build-base-rootfs            |   2 +-
 env/copy_debs_from_yocto.sh                   | 215 ++++++++++---
 env/copy_k515_debs_from_yocto.sh              | 283 ------------------
 10 files changed, 376 insertions(+), 345 deletions(-)
 create mode 100644 archives/features/test/gpu-test/readme.txt
 create mode 100755 archives/features/test/install-test/ros2/install-ros2.sh
 create mode 100644 archives/features/test/install-test/ros2/readme.txt
 delete mode 100755 env/copy_k515_debs_from_yocto.sh

diff --git a/archives/features/test/gpu-test/readme.txt b/archives/features/test/gpu-test/readme.txt
new file mode 100644
index 0000000..7f57be4
--- /dev/null
+++ b/archives/features/test/gpu-test/readme.txt
@@ -0,0 +1,12 @@
+1. glmark2-es2-wayland.sh
+It's for opengles2 test, in config, default develop version, the glmark2-es2-wayland is already installed.
+you can run this script directly.
+
+
+
+2. gpu-test.sh
+It will check whether the GPU driver is insmod.
+
+
+
+
diff --git a/archives/features/test/install-test/docker/install-docker.sh b/archives/features/test/install-test/docker/install-docker.sh
index 33d95fb..e81d2da 100644
--- a/archives/features/test/install-test/docker/install-docker.sh
+++ b/archives/features/test/install-test/docker/install-docker.sh
@@ -9,6 +9,17 @@ else
 fi
 
 
+## notice about need sudo
+need_sudo(){
+if [ "$sudo" ]; then
+    info_msg "[${FUNCNAME[1]}] This script requires root privileges, trying to use sudo, please enter your password!"
+    sudo true || exit
+    info_msg "sudo works..."
+fi
+}
+# make sure you have root privileges
+need_sudo || true
+
 
 echo "[***** *****]remove old version"
 sudo apt-get remove -y docker docker-engine docker.io containerd runc
@@ -38,7 +49,7 @@ ls -al /sys/fs/cgroup/
 
 echo "[***** *****]Set up the repository"
 
-# if defalut firewall is nftables, change it to iptables
+# if default firewall is nf-tables, change it to iptables
 # fix for support docker engine, refer to "https://github.com/docker/for-linux/issues/1437"
 # or it will cause "unable to detect if iptables supports" error
 update-alternatives --set iptables /usr/sbin/iptables-legacy
@@ -52,11 +63,14 @@ echo "[*****]install curl..."
 sudo apt-get install -y ca-certificates curl gnupg lsb-release
 
 echo "[*****]get docker key"
-[ -f /etc/apt/keyrings/docker.gpg ] rm /etc/apt/keyrings/docker.gpg
+[ -f /etc/apt/keyrings/docker.gpg ] sudo rm /etc/apt/keyrings/docker.gpg
 sudo install -m 0755 -d /etc/apt/keyrings
 curl -fsSL https://download.docker.com/linux/$DISTRIB_TYPE/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
 sudo chmod a+r /etc/apt/keyrings/docker.gpg
 
+[ -f /etc/apt/keyrings/docker.gpg ] echo "get docker key successfully"
+
+
 echo \
   "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/$DISTRIB_TYPE \
   "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
diff --git a/archives/features/test/install-test/ros2/install-ros2.sh b/archives/features/test/install-test/ros2/install-ros2.sh
new file mode 100755
index 0000000..a708f64
--- /dev/null
+++ b/archives/features/test/install-test/ros2/install-ros2.sh
@@ -0,0 +1,112 @@
+#!/bin/bash
+
+
+## notice about need sudo
+need_sudo(){
+if [ "$sudo" ]; then
+    info_msg "[${FUNCNAME[1]}] This script requires root privileges, trying to use sudo, please enter your password!"
+    sudo true || exit
+    info_msg "sudo works..."
+fi
+}
+# make sure you have root privileges
+need_sudo || true
+
+
+echo "[***** *****]check install condition"
+
+
+echo "[*****]uname -a"
+uname -a
+
+echo "[*****]lsb_release -a"
+lsb_release -a
+
+echo "[*****]cat /etc/os-release"
+cat /etc/os-release
+
+echo "[*****]cat /etc/issue"
+cat /etc/issue
+
+
+
+echo "[***** *****]Setup Sources"
+
+sudo apt install -y software-properties-common
+sudo add-apt-repository universe
+
+
+echo "[*****]apt update -y"
+sudo apt update -y
+echo "[*****]install locales"
+sudo apt install -y locales
+
+echo "[*****]Set locale"
+locale  # check for UTF-8
+sudo locale-gen en_US en_US.UTF-8
+sudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8
+export LANG=en_US.UTF-8
+locale  # verify settings
+
+
+echo "[*****]apt update -y"
+sudo apt update -y
+
+echo "[*****]install curl"
+sudo apt install -y curl
+
+
+echo "[*****]get ros key"
+# add "raw.githubusercontent.com" to hosts 
+sudo echo "185.199.108.133 raw.githubusercontent.com" >> /etc/hosts
+
+[ -f /usr/share/keyrings/ros-archive-keyring.gpg ] sudo rm /usr/share/keyrings/ros-archive-keyring.gpg
+
+sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg
+[ -f /usr/share/keyrings/ros-archive-keyring.gpg ] echo "[*****]get ros key successfully"
+
+echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null
+
+
+
+echo "[***** *****]Install ROS 2 packages"
+echo "[*****]apt update -y"
+sudo apt update -y
+echo "[*****]apt upgrade -y"
+sudo apt upgrade -y
+
+echo "[*****]install ros-humble-desktop, it will cost long time, please wait...(about 1~2 hours)"
+# remove conflict version packages before install
+sudo apt remove -y libgbm1
+sudo apt remove -y libglapi-mesa
+
+# must use --force-overwrite, or it will cause boost relative library overwrite conflict
+sudo apt -o Dpkg::Options::="--force-overwrite" install -y ros-humble-desktop
+sudo apt --fix-broken --option Dpkg::Options::="--force-overwrite" install -y
+
+
+
+echo "[*****]restore libEGL.so to HW solution"
+# libEGL.so was overwrited, restore it
+rm /usr/lib/aarch64-linux-gnu/libEGL.so
+ln -sf libMali.so /usr/lib/aarch64-linux-gnu/libEGL.so
+
+
+echo "[*****]install ros-dev-tools"
+sudo apt -o Dpkg::Options::="--force-overwrite" install -y ros-dev-tools
+sudo apt --fix-broken --option Dpkg::Options::="--force-overwrite" install -y
+
+
+
+echo "[***** *****]Environment setup"
+
+# Replace ".bash" with your shell if you're not using bash
+# Possible values are: setup.bash, setup.sh, setup.zsh
+source /opt/ros/humble/setup.bash
+echo " source /opt/ros/humble/setup.bash" >> ~/.bashrc
+
+
+
+echo "[***** *****]Setup ROS2 Done"
+echo "Please check the ROS2 function, more detail information, refer to readme.txt"
+
diff --git a/archives/features/test/install-test/ros2/readme.txt b/archives/features/test/install-test/ros2/readme.txt
new file mode 100644
index 0000000..b201560
--- /dev/null
+++ b/archives/features/test/install-test/ros2/readme.txt
@@ -0,0 +1,25 @@
+use install-ros2.sh, only one script, you can get the ROS2 in amlbian.
+You should run this script in root, as the following:
+$ su
+$ ./install-ros2.sh
+
+1. install ROS2
+$ ./install-ros2.sh
+wait a long time(more than 1 hour), and the ROS will be installed successfully.
+
+
+2. test ROS2 in command
+You should run the following command in 2 terminal window.
+$ ros2 run demo_nodes_cpp talker
+$ ros2 run demo_nodes_py listener
+
+if “Hello World” is show between the 2 terminal, the ROS2 is OK.
+
+
+3. Turtlesim --- Little Turtle Simulation
+You should run the following command in 2 terminal window.
+$ ros2 run turtlesim turtlesim_node
+$ ros2 run turtlesim turtle_teleop_key
+
+
+
diff --git a/archives/features/test/system/performance-info.sh b/archives/features/test/system/performance-info.sh
index 8625278..2488500 100755
--- a/archives/features/test/system/performance-info.sh
+++ b/archives/features/test/system/performance-info.sh
@@ -10,6 +10,20 @@ else
 	file_ext=$1
 fi
 
+
+## notice about need sudo
+need_sudo(){
+if [ "$sudo" ]; then
+    info_msg "[${FUNCNAME[1]}] This script requires root privileges, trying to use sudo, please enter your password!"
+    sudo true || exit
+    info_msg "sudo works..."
+fi
+}
+# make sure you have root privileges
+need_sudo || true
+
+
+
 free > performance-free-$file_ext.txt
 
 cat /proc/meminfo > performance-meminfo-$file_ext.txt
diff --git a/archives/features/test/system/set-performance-mode.sh b/archives/features/test/system/set-performance-mode.sh
index 782a1f3..01670ec 100755
--- a/archives/features/test/system/set-performance-mode.sh
+++ b/archives/features/test/system/set-performance-mode.sh
@@ -20,6 +20,19 @@ ON_OFF=${param,,}
 
 echo "Set Performance mode :"$ON_OFF
 
+
+## notice about need sudo
+need_sudo(){
+if [ "$sudo" ]; then
+    info_msg "[${FUNCNAME[1]}] This script requires root privileges, trying to use sudo, please enter your password!"
+    sudo true || exit
+    info_msg "sudo works..."
+fi
+}
+# make sure you have root privileges
+need_sudo || true
+
+
 #####################################################################################
 # CPU
 echo "before set performance mode, print CPU information:"
@@ -30,14 +43,14 @@ cat /sys/devices/system/cpu/cpufreq/policy0/scaling_governor
 cat /sys/class/thermal/thermal_zone0/mode
 cat /proc/sys/kernel/printk
 
-if [[ $ON_OFF == "on"]]; then
+if [[ $ON_OFF == on ]]; then
     # disable DVFS, use high performance mode
     echo performance > /sys/devices/system/cpu/cpufreq/policy0/scaling_governor
     # disable thermal control
     echo disabled > /sys/class/thermal/thermal_zone0/mode
     # disable kernel log
     echo 0 >/proc/sys/kernel/printk
-elif [[ $ON_OFF == "off"]]; then
+elif [[ $ON_OFF == off ]]; then
     # disable DVFS, use high performance mode
     echo conservative > /sys/devices/system/cpu/cpufreq/policy0/scaling_governor
     # disable thermal control
diff --git a/archives/features/test/system/system-info.sh b/archives/features/test/system/system-info.sh
index d997da8..9d16fec 100755
--- a/archives/features/test/system/system-info.sh
+++ b/archives/features/test/system/system-info.sh
@@ -1,16 +1,23 @@
 #!/bin/bash
 
 
-CMD_LIST=(cat etc/amlbian-release \
-		  cat /etc/amlbian-build-time \
-		  uname -a \
-		  lease \lsb_release -a \
-		  cat /etc/os-release \
-		  cat /etc/issue)
+CMD_LIST=("/etc/amlbian-release" \
+		  "/etc/amlbian-build-time" \
+		  /etc/os-release \
+		  /etc/issue)
 
 for CMD in ${CMD_LIST[@]};do
-	echo $CMD
-	eval $CMD
+	echo "cat "$CMD
+	eval "cat "$CMD
 done
 
 
+CMD="uname -a"
+echo $CMD
+eval $CMD
+
+CMD="lsb_release -a"
+echo $CMD
+eval $CMD
+
+
diff --git a/config/functions/build-base-rootfs b/config/functions/build-base-rootfs
index 5f0defc..b20139b 100755
--- a/config/functions/build-base-rootfs
+++ b/config/functions/build-base-rootfs
@@ -36,7 +36,7 @@ PACKAGE_LIST="bc cpufrequtils device-tree-compiler fping fake-hwclock psmisc chr
 PACKAGE_LIST_ADDITIONAL="network-manager wireless-tools lsof htop mmc-utils wget nano sysstat net-tools \
 	resolvconf iozone3 jq libcrack2 cracklib-runtime curl rfkill bison flex libssl-dev \
 	can-utils conky-std conky cups-bsd evince-common evince exfat-fuse shotwell-common shotwell simple-scan \
-	parole usbutils util-linux hardinfo hplip kmscube laptop-detect \
+	parole usbutils util-linux hardinfo hplip kmscube laptop-detect libjpeg-turbo8-dev \
 	libappstream-glib8 libbytesize1 libfftw3-double3 libgee-0.8-2 libgfxdr0"
 
 if [[ "$DISTRIB_TYPE" != "minimal" ]]; then
diff --git a/env/copy_debs_from_yocto.sh b/env/copy_debs_from_yocto.sh
index 7a3254c..22df568 100755
--- a/env/copy_debs_from_yocto.sh
+++ b/env/copy_debs_from_yocto.sh
@@ -1,4 +1,7 @@
 #!/bin/bash
+
+echo "All needed copy debs should be copied successfully, or you should check the yocto build result."
+
 BUILDDIR=`echo $BUILD_DIR`
 if [ ! -n "$BUILDDIR" ]; then
     BUILDDIR=build-debs
@@ -6,24 +9,36 @@ fi
 
 DEB_DIR=$BUILDDIR/tmp/deploy/deb
 APP_DEBS_DIR=$BUILDDIR/tmp/work/aarch64-poky-linux
-KERNEL_DEBS_DIR=$BUILDDIR/tmp/work/mesont7_debian-poky-linux
+
 ALL_POKY_DEBS_DIR=$BUILDDIR/tmp/work/all-poky-linux
 AMLBIAN_DEBS_DIR=amlbian/deb-packages
 
-package_status_append=(kernel-5.4.210_5.4.210+git999-r2_arm64.deb \
-			kernel-module-aml-dvb-extern-5.4.210_5.4.210+git999-r2_arm64.deb \
-			kernel-module-aml-media-5.4.210_5.4.210+git999-r2_arm64.deb \
+package_status_append=(kernel-5.15.78_5.15.78+git999-r2_arm64.deb \
+			kernel-module-amlogic-debug-iotrace-5.15.78_5.15.78+git999-r2_arm64.deb \
+			kernel-module-amlogic-debug-5.15.78_5.15.78+git999-r2_arm64.deb \
+			kernel-module-amlogic-tee-5.15.78_5.15.78+git999-r2_arm64.deb \
+			kernel-module-amlogic-cpuinfo-5.15.78_5.15.78+git999-r2_arm64.deb \
+			kernel-module-amlogic-power-5.15.78_5.15.78+git999-r2_arm64.deb \
+			kernel-module-amlogic-mmc-5.15.78_5.15.78+git999-r2_arm64.deb \
+			kernel-module-amlogic-wireless-5.15.78_5.15.78+git999-r2_arm64.deb \
+			kernel-module-cfg80211-5.15.78_5.15.78+git999-r2_arm64.deb \
+			kernel-module-amlogic-thermal-5.15.78_5.15.78+git999-r2_arm64.deb \
+			kernel-module-amlogic-dvb-demux-5.15.78_5.15.78+git999-r2_arm64.deb \
+			kernel-module-amvdec-debug-port-5.15.78_5.15-r0_arm64.deb \
+			kernel-module-amlogic-dvb-5.15.78_5.15.78+git999-r2_arm64.deb \
+			kernel-module-aml-media-5.15.78_5.15.78+git999-r2_arm64.deb \
+			kernel-module-v4l2-async-5.15.78_5.15.78+git999-r2_arm64.deb \
+			kernel-module-v4l2-fwnode-5.15.78_5.15.78+git999-r2_arm64.deb \
+            kernel-module-amlogic-gkitool-5.15.78_5.15.78+git999-r2_arm64.deb \
+            kernel-module-optee-5.15.78_5.15.78+git999-r2_arm64.deb \
 			systemd-serialgetty_1.0-r5_arm64.deb \
 			gawk_3.1.5-r2_arm64.deb \
 			glibc-gconv-utf-16_2.31-r0_arm64.deb \
 			gnome-desktop-testing_2018.1-r0_arm64.deb \
-			grpc_1.24.3-r0_arm64.deb \
 			libavcodec58_4.2.2-r0_arm64.deb \
 			libavfilter7_4.2.2-r0_arm64.deb \
 			libavformat58_4.2.2-r0_arm64.deb \
 			libavutil56_4.2.2-r0_arm64.deb \
-			libbinder_999-r0_arm64.deb \
-			libboost-system1.78.0_1.78.0-r0_arm64.deb \
 			libbz2-1_1.0.8-r0_arm64.deb \
 			libc6_2.31+git0+4f0a61f753-r0_arm64.deb \
 			libcairo-gobject2_1.14.6-r0_arm64.deb \
@@ -44,13 +59,11 @@ package_status_append=(kernel-5.4.210_5.4.210+git999-r2_arm64.deb \
 			libgstvideo-1.0-0_1.16.3-r0_arm64.deb \
 			libgudev-1.0-0_233-r0_arm64.deb \
 			libical_3.0.7-r0_arm64.deb \
-			liblog1_999-r0_arm64.deb \
 			libmenuw5_6.2-r0_arm64.deb \
 			libmp3lame0_3.100-r0_arm64.deb \
 			libncursesw5_6.2-r0_arm64.deb \
 			liborc-0.4-0_0.4.31-r0_arm64.deb \
 			libpanelw5_6.2-r0_arm64.deb \
-			libprotobuf22_3.11.4-r0_arm64.deb \
 			libpulse0_13.0-r0_arm64.deb \
 			libreadline5_5.2-r9_arm64.deb \
 			librsvg-2-2_2.40.21-r0_arm64.deb \
@@ -78,27 +91,103 @@ package_status_append=(kernel-5.4.210_5.4.210+git999-r2_arm64.deb \
 			gstreamer1.0_1.16.3-r0_arm64.deb \
 			libkms1_2.4.100-r0_arm64.deb \
 			wpa-supplicant-passphrase_2.9-r0_arm64.deb \
-			wpa-supplicant_2.9-r0_arm64.deb )
+			wpa-supplicant_2.9-r0_arm64.deb \
+			aml-dvb_999-r0_arm64.deb \
+			aml-dvb-dev_999-r0_arm64.deb \
+			libasound-module-ctl-arcam-av_1.2.1-r0_arm64.deb \
+			libasound-module-pcm-oss_1.2.1-r0_arm64.deb \
+			libasound-module-pcm-upmix_1.2.1-r0_arm64.deb \
+			libasound-module-pcm-usb-stream_1.2.1-r0_arm64.deb \
+			libasound-module-pcm-vdownmix_1.2.1-r0_arm64.deb \
+			libasound-module-rate-samplerate_1.2.1-r0_arm64.deb \
+			libasound-module-rate-speexrate_1.2.1-r0_arm64.deb \
+			alsa-plugins-pulseaudio-conf_1.2.1-r0_arm64.deb)
 
-packages_arr=(  gst-jpeg-swdec gst-aml-imgproc gst-aml-ion-allocator gst-aml-gfx2d gst-plugin-conv \
-                gst-plugin-nn gst-plugin-overlay detect-library \ 
-                npu-common alsa-lib alsa-state alsa-utils aml-amaudioutils aml-audio-hal \
+packages_arr=(  gst-aml-imgproc gst-aml-ion-allocator gst-aml-gfx2d gst-plugin-conv \
+                gst-plugin-nn gst-plugin-overlay detect-library \
+                npu-common alsa-lib alsa-state alsa-utils alsa-plugins alsa-utils-scripts aml-amaudioutils aml-audio-hal \
                 aml-audio-service aml-avsync aml-cas-hal aml-dtvdemod aml-dvb \
                 aml-dvbaudioutils aml-hdcp aml-hdcp-load-firmware aml-libdvr \
-                aml-mediadrm-widevine aml-mediahal-sdk aml-pqserver \
-                aml-provision aml-secmem aml-tvserver aml-ubootenv aml-zvbi \
+                aml-mediahal-sdk aml-pqserver gst-plugin-aml-v4l2dec\
+                aml-provision aml-tvserver aml-ubootenv aml-zvbi \
                 android-tools openssl android-tools-logcat bluez-alsa bluez5 brcm-patchram-plus \
-                fbscripts gst-plugin-venc-jpeg gst-plugin-venc-multienc \
-                libdrm-meson libgdc libge2d libgles-eabihf-gondul-wayland-drm \
-                libion libjpeg libjpeg-turbo libmultienc mbedtls optee-userspace optee-video-firmware \
-                playready tinyalsa vulkan-loader wifi-amlogic wifi-ap-amlogic \
-                wpa-supplicant mediactrlsrc libfaad-aml libmad-aml)
+                fbscripts gst-plugin-venc-jpeg gst-aml-drmbufferpool-plugins \
+                libdrm-meson libgdc libge2d \
+                libion libjpeg mbedtls optee-userspace optee-video-firmware \
+                tinyalsa wifi-amlogic wifi-ap-amlogic libbinder liblog grpc protobuf boost c-ares icu\
+                wpa-supplicant libfaad-aml libmad-aml)
 
-kernel_mod_arr=(media-modules isp gondul android-tools-conf ap6xxx adla \
-                optee-linux-driver shadow-securetty systemd-conf systemd-serialgetty)
+kernel_mod_arr=(media-modules android-tools-conf ap6xxx \
+                shadow-securetty systemd-conf systemd-serialgetty vendor-files)
 
 all_poky_arr=(alsa-topology-conf alsa-ucm-conf ca-certificates tee-supplicant)
 
+
+
+
+TARGET_BOARD=
+echo "TARGET_MACHINE: "$TARGET_MACHINE
+
+
+## select_config
+get_suitable_board() {
+	TARGET_MACHINE_ARRAY=($(ls $BUILDDIR/tmp/work/ | grep meson))
+	if [ ${#TARGET_MACHINE_ARRAY[*]} == 0 ]; then
+		echo "Please check your yocto build result, no meson*-poky-linux folder in /tmp/work"
+		exit 0
+	elif [ ${#TARGET_MACHINE_ARRAY[*]} == 1 ]; then
+		# only one meson folder in yocto build folder : /tmp/work/
+		TARGET_BOARD=${TARGET_MACHINE_ARRAY[0]};
+	elif [ "$TARGET_MACHINE" == "mesont7c-an400-debian-5.15" ]; then
+		TARGET_BOARD=mesont7c_an400_debian_5.15-poky-linux
+	elif [ "$TARGET_MACHINE" == "mesong12b-w400-debian-5.15" ]; then
+		TARGET_BOARD=mesong12b_w400_debian_5.15-poky-linux
+	elif [ "$TARGET_MACHINE" == "mesonsm1-ac200-debian-5.15" ]; then
+		TARGET_BOARD=mesonsm1_ac200_debian_5.15-poky-linux
+	else
+		# multiple meson folder, need select by user
+		echo "Select the yocto build result folder:"
+		declare -i NUM=0
+		for data in ${TARGET_MACHINE_ARRAY[@]}
+		do 
+			echo -n $NUM
+			echo -n "    "
+			echo ${data}
+			NUM=$NUM+1
+		done
+		read conf
+		TARGET_BOARD=`echo ${TARGET_MACHINE_ARRAY[$conf]} |awk -F '/' '{print $NF}'`
+	fi
+}
+
+
+get_suitable_board
+
+echo "TARGET_BOARD: "$TARGET_BOARD
+KERNEL_DEBS_DIR=$BUILDDIR/tmp/work/$TARGET_BOARD
+
+
+# set SOC special information and packages
+case "$TARGET_BOARD" in
+	mesont7c_an400_debian_5.15-poky-linux)	# T7C/A311D2revC
+		packages_arr+=( libmultienc gst-plugin-venc-multienc \
+			           libgles-eabihf-gondul-wayland-drm mediactrlsrc)
+		kernel_mod_arr+=( adla gondul isp)
+		;;
+	mesong12b_w400_debian_5.15-poky-linux) # A311D
+		packages_arr+=( libvpcodec h264bitstream libvphevcodec gst-plugin-venc-h265 gst-plugin-venc-h264 \
+						libgles-eabihf-gondul-wayland-drm)
+		kernel_mod_arr+=( npu gondul isp)
+		;;
+	mesonsm1_ac200_debian_5.15-poky-linux) # S905D3
+		packages_arr+=( libvpcodec h264bitstream libvphevcodec gst-plugin-venc-h265 gst-plugin-venc-h264 \
+						libgles-eabihf-dvalin-wayland-drm)
+		kernel_mod_arr+=( npu dvalin)
+		;;
+esac
+
+
+
 # delete previous debs
 rm -rf $AMLBIAN_DEBS_DIR/*
 
@@ -121,7 +210,7 @@ for debs in ${packages_arr[@]};do
             mkdir $AMLBIAN_DEBS_DIR/$debs -p
         fi
         for file in $files; do
-            if [[ $file == *-dbg* || $file == *-locale-* || $file == *-doc* || \
+            if [[ $file == *-dbg* || $file == *-locale-* || $file == *-doc* || $file == *-debug* ||\
             $file == *-src* ]]; then
                 continue
             fi
@@ -141,7 +230,7 @@ for debs in ${kernel_mod_arr[@]};do
             mkdir $AMLBIAN_DEBS_DIR/$debs -p
         fi
         for file in $files; do
-            if [[ $file == *-dbg* || $file == *-locale-* || $file == *-doc* \
+            if [[ $file == *-dbg* || $file == *-locale-* || $file == *-doc* || $file == *-debug* \
             || $file == *-src* ]]; then
                 continue
             fi
@@ -161,7 +250,7 @@ for debs in ${all_poky_arr[@]};do
             mkdir $AMLBIAN_DEBS_DIR/$debs -p
         fi
         for file in $files; do
-            if [[ $file == *-dbg* || $file == *-locale-* || $file == *-doc* \
+            if [[ $file == *-dbg* || $file == *-locale-* || $file == *-doc* || $file == *-debug* \
             || $file == *-src* ]]; then
                 continue
             fi
@@ -180,31 +269,59 @@ else
     echo "======do not find $debs directory========="
 fi
 
-#for gstreamer build,need yocto *.so file
-gstreamer_arr=(mediactrlsrc)
+#get kernel config from yocto
+KERNEL_CONFIG_DIR="meta-meson/recipes-kernel/linux/5.15"
+KERNEL_CONFIG="amlbian/config/kernel-config"
+mkdir -p $KERNEL_CONFIG
+	cp -f ${KERNEL_CONFIG_DIR}/*.cfg $KERNEL_CONFIG
 
-GST_DEBS_TMP=$AMLBIAN_DEBS_DIR/gst-debs
-GST_LIB_TMP=$AMLBIAN_DEBS_DIR/gst-libs
+#copy modules needed by ramfs
+RAMFS_MODUDLES_DIR=$KERNEL_DEBS_DIR/core-image-minimal/1.0-r0/rootfs
+AMLBIAN_MODULES_DIR="amlbian/ramfs-modules"
 
-for gst_debs in ${gstreamer_arr[@]};do
-    echo "cp $gst_debs deb package to gst-packages..."
-    files=`find $APP_DEBS_DIR/$gst_debs -name "*.deb"`
-    if [ $? == 0 ]; then
-        if [ ! -d $GST_DEBS_TMP/$gst_debs ]; then
-            mkdir $GST_DEBS_TMP/$gst_debs -p
-        fi
-        for file in $files; do
-            if [[ $file == *-dbg* || $file == *-locale-* || $file == *-doc* || \
-            $file == *-src* || $file == *-dev* ]]; then
-                continue
+echo "Copy ramfs modules. RAMFS_MODUDLES_DIR: ${RAMFS_MODUDLES_DIR}..."
+rm -rf $AMLBIAN_MODULES_DIR/*
+mkdir -p $AMLBIAN_MODULES_DIR
+cp -rf ${RAMFS_MODUDLES_DIR}/modules $AMLBIAN_MODULES_DIR/
+
+#cp gstreamer patch from yocto
+PATCH_DIR_GST="amlbian/packages-patch/gst-plugins-good-patchs"
+if [ -d "$PATCH_DIR_GST" ]; then
+    rm -rf $PATCH_DIR_GST
+fi
+mkdir -p $PATCH_DIR_GST
+cp -rf $APP_DEBS_DIR/gstreamer1.0-plugins-good/1.16.3-r0/gst1-plugins-good-1.20.3/* $PATCH_DIR_GST/
+
+if [[ " ${packages_arr[@]} " =~ " mediactrlsrc " ]]; then
+  echo "Found: mediactrlsrc"
+
+    #for gstreamer build,need yocto *.so file
+    gstreamer_arr=(mediactrlsrc)
+
+    GST_DEBS_TMP=$AMLBIAN_DEBS_DIR/gst-debs
+    GST_LIB_TMP=$AMLBIAN_DEBS_DIR/gst-libs
+
+    for gst_debs in ${gstreamer_arr[@]};do
+        echo "cp $gst_debs deb package to gst-packages..."
+        files=`find $APP_DEBS_DIR/$gst_debs -name "*.deb"`
+        if [ $? == 0 ]; then
+            if [ ! -d $GST_DEBS_TMP/$gst_debs ]; then
+                mkdir $GST_DEBS_TMP/$gst_debs -p
             fi
-            dpkg -x $file $GST_LIB_TMP
-            cp $GST_LIB_TMP/usr/lib/*so $GST_LIB_TMP
-            rm -rf $GST_LIB_TMP/usr
-        done
+            for file in $files; do
+                if [[ $file == *-dbg* || $file == *-locale-* || $file == *-doc* || \
+                $file == *-src* || $file == *-dev* ]]; then
+                    continue
+                fi
+                dpkg -x $file $GST_LIB_TMP
+                cp $GST_LIB_TMP/usr/lib/*so $GST_LIB_TMP
+                rm -rf $GST_LIB_TMP/usr
+            done
 
-        rm -rf $GST_DEBS_TMP
-    else
-        echo "======do not find $debs directory========="
-    fi
-done
+            rm -rf $GST_DEBS_TMP
+        else
+            echo "======do not find $debs directory========="
+        fi
+    done
+
+fi
diff --git a/env/copy_k515_debs_from_yocto.sh b/env/copy_k515_debs_from_yocto.sh
deleted file mode 100755
index 8cf239a..0000000
--- a/env/copy_k515_debs_from_yocto.sh
+++ /dev/null
@@ -1,283 +0,0 @@
-#!/bin/bash
-BUILDDIR=`echo $BUILD_DIR`
-if [ ! -n "$BUILDDIR" ]; then
-    BUILDDIR=build-debs
-fi
-
-DEB_DIR=$BUILDDIR/tmp/deploy/deb
-APP_DEBS_DIR=$BUILDDIR/tmp/work/aarch64-poky-linux
-
-ALL_POKY_DEBS_DIR=$BUILDDIR/tmp/work/all-poky-linux
-AMLBIAN_DEBS_DIR=amlbian/deb-packages
-
-package_status_append=(kernel-5.15.78_5.15.78+git999-r2_arm64.deb \
-			kernel-module-amlogic-debug-iotrace-5.15.78_5.15.78+git999-r2_arm64.deb \
-			kernel-module-amlogic-debug-5.15.78_5.15.78+git999-r2_arm64.deb \
-			kernel-module-amlogic-tee-5.15.78_5.15.78+git999-r2_arm64.deb \
-			kernel-module-amlogic-cpuinfo-5.15.78_5.15.78+git999-r2_arm64.deb \
-			kernel-module-amlogic-power-5.15.78_5.15.78+git999-r2_arm64.deb \
-			kernel-module-amlogic-mmc-5.15.78_5.15.78+git999-r2_arm64.deb \
-			kernel-module-amlogic-wireless-5.15.78_5.15.78+git999-r2_arm64.deb \
-			kernel-module-cfg80211-5.15.78_5.15.78+git999-r2_arm64.deb \
-			kernel-module-amlogic-thermal-5.15.78_5.15.78+git999-r2_arm64.deb \
-			kernel-module-amlogic-dvb-demux-5.15.78_5.15.78+git999-r2_arm64.deb \
-			kernel-module-amvdec-debug-port-5.15.78_5.15-r0_arm64.deb \
-			kernel-module-amlogic-dvb-5.15.78_5.15.78+git999-r2_arm64.deb \
-			kernel-module-aml-media-5.15.78_5.15.78+git999-r2_arm64.deb \
-			kernel-module-v4l2-async-5.15.78_5.15.78+git999-r2_arm64.deb \
-			kernel-module-v4l2-fwnode-5.15.78_5.15.78+git999-r2_arm64.deb \
-            kernel-module-amlogic-gkitool-5.15.78_5.15.78+git999-r2_arm64.deb \
-            kernel-module-optee-5.15.78_5.15.78+git999-r2_arm64.deb \
-			systemd-serialgetty_1.0-r5_arm64.deb \
-			gawk_3.1.5-r2_arm64.deb \
-			glibc-gconv-utf-16_2.31-r0_arm64.deb \
-			gnome-desktop-testing_2018.1-r0_arm64.deb \
-			libavcodec58_4.2.2-r0_arm64.deb \
-			libavfilter7_4.2.2-r0_arm64.deb \
-			libavformat58_4.2.2-r0_arm64.deb \
-			libavutil56_4.2.2-r0_arm64.deb \
-			libbz2-1_1.0.8-r0_arm64.deb \
-			libc6_2.31+git0+4f0a61f753-r0_arm64.deb \
-			libcairo-gobject2_1.14.6-r0_arm64.deb \
-			libflac8_1.3.3-r0_arm64.deb \
-			libformw5_6.2-r0_arm64.deb \
-			libgdk-pixbuf-2.0-0_2.40.0-r0_arm64.deb \
-			libglib-2.0-0_2.62.6-r0_arm64.deb \
-			libgstallocators-1.0-0_1.16.3-r0_arm64.deb \
-			libgstapp-1.0-0_1.16.3-r0_arm64.deb \
-			libgstaudio-1.0-0_1.16.3-r0_arm64.deb \
-			libgstfft-1.0-0_1.16.3-r0_arm64.deb \
-			libgstpbutils-1.0-0_1.16.3-r0_arm64.deb \
-			libgstriff-1.0-0_1.16.3-r0_arm64.deb \
-			libgstrtp-1.0-0_1.16.3-r0_arm64.deb \
-			libgstrtsp-1.0-0_1.16.3-r0_arm64.deb \
-			libgstsdp-1.0-0_1.16.3-r0_arm64.deb \
-			libgsttag-1.0-0_1.16.3-r0_arm64.deb \
-			libgstvideo-1.0-0_1.16.3-r0_arm64.deb \
-			libgudev-1.0-0_233-r0_arm64.deb \
-			libical_3.0.7-r0_arm64.deb \
-			libmenuw5_6.2-r0_arm64.deb \
-			libmp3lame0_3.100-r0_arm64.deb \
-			libncursesw5_6.2-r0_arm64.deb \
-			liborc-0.4-0_0.4.31-r0_arm64.deb \
-			libpanelw5_6.2-r0_arm64.deb \
-			libpulse0_13.0-r0_arm64.deb \
-			libreadline5_5.2-r9_arm64.deb \
-			librsvg-2-2_2.40.21-r0_arm64.deb \
-			libsamplerate0_0.1.9-r1_arm64.deb \
-			libsbc1_1.4-r0_arm64.deb \
-			libsndfile1_1.0.28-r0_arm64.deb \
-			libsoup-2.4_2.68.4-r0_arm64.deb \
-			libspeex1_1.2.0-r0_arm64.deb \
-			libtag1_1.11.1-r0_arm64.deb \
-			libtinfo5_6.2-r0_arm64.deb \
-			libwebp_1.1.0-r0_arm64.deb \
-			libxml2_2.9.10-r0_arm64.deb \
-			libz1_1.2.11-r0_arm64.deb \
-			mpg123_1.25.13-r0_arm64.deb \
-			ncurses-terminfo_6.2-r0_arm64.deb \
-			ncurses-tools_6.2-r0_arm64.deb \
-			ncurses_6.2-r0_arm64.deb \
-			nettle_3.5.1-r0_arm64.deb \
-			pango_1.44.7-r0_arm64.deb \
-			python3-core_3.8.11-r0_arm64.deb \
-			python3-dbus_1.2.16-r0_arm64.deb \
-			python3-pygobject_3.34.0-r0_arm64.deb \
-			sqlite3_3.31.1-r0_arm64.deb \
-			wayland_1.17.0-r0_arm64.deb \
-			gstreamer1.0_1.16.3-r0_arm64.deb \
-			libkms1_2.4.100-r0_arm64.deb \
-			wpa-supplicant-passphrase_2.9-r0_arm64.deb \
-			wpa-supplicant_2.9-r0_arm64.deb \
-			aml-dvb_999-r0_arm64.deb \
-			aml-dvb-dev_999-r0_arm64.deb \
-			libasound-module-ctl-arcam-av_1.2.1-r0_arm64.deb \
-			libasound-module-pcm-oss_1.2.1-r0_arm64.deb \
-			libasound-module-pcm-upmix_1.2.1-r0_arm64.deb \
-			libasound-module-pcm-usb-stream_1.2.1-r0_arm64.deb \
-			libasound-module-pcm-vdownmix_1.2.1-r0_arm64.deb \
-			libasound-module-rate-samplerate_1.2.1-r0_arm64.deb \
-			libasound-module-rate-speexrate_1.2.1-r0_arm64.deb \
-			alsa-plugins-pulseaudio-conf_1.2.1-r0_arm64.deb)
-
-packages_arr=(  gst-jpeg-swdec gst-aml-imgproc gst-aml-ion-allocator gst-aml-gfx2d gst-plugin-conv \
-                gst-plugin-nn gst-plugin-overlay detect-library \
-                npu-common alsa-lib alsa-state alsa-utils alsa-plugins alsa-utils-scripts aml-amaudioutils aml-audio-hal \
-                aml-audio-service aml-avsync aml-cas-hal aml-dtvdemod aml-dvb \
-                aml-dvbaudioutils aml-hdcp aml-hdcp-load-firmware aml-libdvr \
-                aml-mediahal-sdk aml-pqserver gst-plugin-aml-v4l2dec\
-                aml-provision aml-tvserver aml-ubootenv aml-zvbi \
-                android-tools openssl android-tools-logcat bluez-alsa bluez5 brcm-patchram-plus \
-                fbscripts gst-plugin-venc-jpeg gst-aml-drmbufferpool-plugins \
-                libdrm-meson libgdc libge2d \
-                libion libjpeg libjpeg-turbo mbedtls optee-userspace optee-video-firmware \
-                tinyalsa wifi-amlogic wifi-ap-amlogic libbinder liblog grpc protobuf boost c-ares icu\
-                wpa-supplicant libfaad-aml libmad-aml)
-
-kernel_mod_arr=(media-modules android-tools-conf ap6xxx \
-                shadow-securetty systemd-conf systemd-serialgetty vendor-files)
-
-all_poky_arr=(alsa-topology-conf alsa-ucm-conf ca-certificates tee-supplicant)
-
-
-# set SOC special information and packages
-case "$TARGET_MACHINE" in
-	mesont7c-an400-debian-5.15)
-		TARGET_BOARD=mesont7c_an400_debian_5.15-poky-linux
-		packages_arr+=( libmultienc gst-plugin-venc-multienc \
-			           libgles-eabihf-gondul-wayland-drm mediactrlsrc)
-		kernel_mod_arr+=( adla gondul isp)
-		;;
-	mesong12b-w400-debian-5.15)
-		TARGET_BOARD=mesong12b_w400_debian_5.15-poky-linux
-		packages_arr+=( libvpcodec h264bitstream libvphevcodec gst-plugin-venc-h265 gst-plugin-venc-h264 \
-						libgles-eabihf-gondul-wayland-drm)
-		kernel_mod_arr+=( npu gondul isp)
-		;;
-	mesonsm1-ac200-debian-5.15)
-		TARGET_BOARD=mesonsm1_ac200_debian_5.15-poky-linux
-		packages_arr+=( libvpcodec h264bitstream libvphevcodec gst-plugin-venc-h265 gst-plugin-venc-h264 \
-						libgles-eabihf-dvalin-wayland-drm)
-		kernel_mod_arr+=( npu dvalin)
-		;;
-esac
-KERNEL_DEBS_DIR=$BUILDDIR/tmp/work/$TARGET_BOARD
-
-
-# delete previous debs
-rm -rf $AMLBIAN_DEBS_DIR/*
-
-mkdir -p $AMLBIAN_DEBS_DIR/status_append
-mkdir -p $AMLBIAN_DEBS_DIR/aml-utils
-for debs in `find $DEB_DIR -name "*.deb"`; do
-    if [[ "${package_status_append[@]}" =~ "${debs##*/}" ]]; then
-        cp $debs $AMLBIAN_DEBS_DIR/status_append/
-    elif [[ "aml-utils-wifi-power_999-r0_arm64.deb" == "${debs##*/}" ]]; then
-        cp $debs $AMLBIAN_DEBS_DIR/aml-utils
-    fi
-done
-
-for debs in ${packages_arr[@]};do
-    echo "cp $debs deb package to amlbian..."
-    #cd $DEB_PACKAGE_DIR
-    files=`find $APP_DEBS_DIR/$debs -name "*.deb"`
-    if [ $? == 0 ]; then
-        if [ ! -d $AMLBIAN_DEBS_DIR/$debs ]; then
-            mkdir $AMLBIAN_DEBS_DIR/$debs -p
-        fi
-        for file in $files; do
-            if [[ $file == *-dbg* || $file == *-locale-* || $file == *-doc* || $file == *-debug* ||\
-            $file == *-src* ]]; then
-                continue
-            fi
-            cp -f $file $AMLBIAN_DEBS_DIR/$debs
-        done
-    else
-        echo "======do not find $debs directory========="
-    fi
-done
-
-for debs in ${kernel_mod_arr[@]};do
-    echo "cp $debs deb package to amlbian..."
-    #cd $DEB_PACKAGE_DIR
-    files=`find $KERNEL_DEBS_DIR/$debs -name "*.deb"`
-    if [ $? == 0 ]; then
-        if [ ! -d $AMLBIAN_DEBS_DIR/$debs ]; then
-            mkdir $AMLBIAN_DEBS_DIR/$debs -p
-        fi
-        for file in $files; do
-            if [[ $file == *-dbg* || $file == *-locale-* || $file == *-doc* || $file == *-debug* \
-            || $file == *-src* ]]; then
-                continue
-            fi
-            cp -f $file $AMLBIAN_DEBS_DIR/$debs
-        done
-    else
-        echo "======do not find $debs directory========="
-    fi
-done
-
-for debs in ${all_poky_arr[@]};do
-    echo "cp $debs deb package to amlbian..."
-    #cd $DEB_PACKAGE_DIR
-    files=`find $ALL_POKY_DEBS_DIR/$debs -name "*.deb"`
-    if [ $? == 0 ]; then
-        if [ ! -d $AMLBIAN_DEBS_DIR/$debs ]; then
-            mkdir $AMLBIAN_DEBS_DIR/$debs -p
-        fi
-        for file in $files; do
-            if [[ $file == *-dbg* || $file == *-locale-* || $file == *-doc* || $file == *-debug* \
-            || $file == *-src* ]]; then
-                continue
-            fi
-            cp -f $file $AMLBIAN_DEBS_DIR/$debs
-        done
-    else
-        echo "======do not find $debs directory========="
-    fi
-done
-
-mkdir $AMLBIAN_DEBS_DIR/wififw -p
-file=`find $APP_DEBS_DIR/wififw -name "wififw-ap6398*.deb"`
-if [ $? == 0 ]; then
-    cp -f $file $AMLBIAN_DEBS_DIR/wififw
-else
-    echo "======do not find $debs directory========="
-fi
-
-#get kernel config from yocto
-KERNEL_CONFIG_DIR="meta-meson/recipes-kernel/linux/5.15"
-KERNEL_CONFIG="amlbian/config/kernel-config"
-mkdir -p $KERNEL_CONFIG
-	cp -f ${KERNEL_CONFIG_DIR}/*.cfg $KERNEL_CONFIG
-
-#copy modules needed by ramfs
-RAMFS_MODUDLES_DIR=$BUILDDIR/tmp/work/$TARGET_BOARD/core-image-minimal/1.0-r0/rootfs
-AMLBIAN_MODULES_DIR="amlbian/ramfs-modules"
-
-echo "Copy ramfs modules. RAMFS_MODUDLES_DIR: ${RAMFS_MODUDLES_DIR}..."
-rm -rf $AMLBIAN_MODULES_DIR/*
-mkdir -p $AMLBIAN_MODULES_DIR
-cp -rf ${RAMFS_MODUDLES_DIR}/modules $AMLBIAN_MODULES_DIR/
-
-#cp gstreamer patch from yocto
-PATCH_DIR_GST="amlbian/packages-patch/gst-plugins-good-patchs"
-if [ -d "$PATCH_DIR_GST" ]; then
-    rm -rf $PATCH_DIR_GST
-fi
-mkdir -p $PATCH_DIR_GST
-cp -rf $APP_DEBS_DIR/gstreamer1.0-plugins-good/1.16.3-r0/gst1-plugins-good-1.20.3/* $PATCH_DIR_GST/
-
-if [[ " ${packages_arr[@]} " =~ " mediactrlsrc " ]]; then
-  echo "Found: mediactrlsrc"
-
-    #for gstreamer build,need yocto *.so file
-    gstreamer_arr=(mediactrlsrc)
-
-    GST_DEBS_TMP=$AMLBIAN_DEBS_DIR/gst-debs
-    GST_LIB_TMP=$AMLBIAN_DEBS_DIR/gst-libs
-
-    for gst_debs in ${gstreamer_arr[@]};do
-        echo "cp $gst_debs deb package to gst-packages..."
-        files=`find $APP_DEBS_DIR/$gst_debs -name "*.deb"`
-        if [ $? == 0 ]; then
-            if [ ! -d $GST_DEBS_TMP/$gst_debs ]; then
-                mkdir $GST_DEBS_TMP/$gst_debs -p
-            fi
-            for file in $files; do
-                if [[ $file == *-dbg* || $file == *-locale-* || $file == *-doc* || \
-                $file == *-src* || $file == *-dev* ]]; then
-                    continue
-                fi
-                dpkg -x $file $GST_LIB_TMP
-                cp $GST_LIB_TMP/usr/lib/*so $GST_LIB_TMP
-                rm -rf $GST_LIB_TMP/usr
-            done
-
-            rm -rf $GST_DEBS_TMP
-        else
-            echo "======do not find $debs directory========="
-        fi
-    done
-
-fi
-- 
2.25.1

