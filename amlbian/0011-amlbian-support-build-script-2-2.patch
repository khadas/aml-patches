From ef6f7024bed0ba8d6ce799d07a01e251443120a5 Mon Sep 17 00:00:00 2001
From: "guoping.li" <guoping.li@amlogic.com>
Date: Thu, 30 Nov 2023 13:42:19 +0800
Subject: [PATCH 11/13] amlbian: support build script [2/2]

PD#SWPL-147576

Problem:
support update code and build script, for easy to use

Solution:
1. update code :
save stash->repo sync->apply stash
2. build yocto->copy debs->build debian

Verify:
local

Signed-off-by: guoping.li <guoping.li@amlogic.com>
Change-Id: I0f253eddf7e84894f4c1624a8652624992a89f78
---
 env/build-amlbian.sh        | 24 ++++++++++--------------
 env/build-yocto.sh          | 28 +++++++++++++++++++++++++---
 env/copy_debs_from_yocto.sh | 15 +++++++++++++--
 env/docker-run-debian.sh    |  4 ++--
 env/update-code.sh          | 25 ++++++++++++++++++++-----
 5 files changed, 70 insertions(+), 26 deletions(-)

diff --git a/env/build-amlbian.sh b/env/build-amlbian.sh
index 596c35a..2022c53 100755
--- a/env/build-amlbian.sh
+++ b/env/build-amlbian.sh
@@ -1,6 +1,7 @@
 #!/bin/bash
 
-echo "build amlbian"
+echo "build amlbian:" $1 " " $2
+
 
 SHELL_FILE_NAME=${BASH_SOURCE}
 SHELL_FILE_NAME=$(basename "$SHELL_FILE_NAME")
@@ -35,23 +36,22 @@ config_file_array=
 selected_config_index=
 selected_config_file=
 
-## select_config
+## get_config_file
 get_config_file() {
 	selected_config_index=$1
-	arr=($(find amlbian -maxdepth 1 -name "*.conf"))
-	declare -i count=${#arr[@]}-1
+	config_file_array=($(find amlbian -maxdepth 1 -name "*.conf" | sort))
+	declare -i count=${#config_file_array[@]}-1
 
 	if [ $selected_config_index -le $count ]; then
-		selected_config_file=`echo ${arr[$selected_config_index]} |awk -F '/' '{print $NF}'`
+		selected_config_file=`echo ${config_file_array[$selected_config_index]} |awk -F '/' '{print $NF}'`
 	else
 		selected_config_file=
 	fi
 }
 
-
-## select_config
-select_config() {
-	config_file_array=($(find amlbian -maxdepth 1 -name "*.conf"))
+## select_config_with_buildtype
+select_config_with_buildtype() {
+	config_file_array=($(find amlbian -maxdepth 1 -name "*.conf" | sort))
 	echo "Select the conf you need:"
 	declare -i NUM=0
 	for build_type in ${build_type_array[@]}
@@ -106,13 +106,11 @@ if [ $# == 2 ];then # no parameters, select config and build
 	get_config_file $2
 fi
 
-echo "Used build type:"$selected_build_type
-echo "Used config file:"[$selected_config_index]:$selected_config_file
 
 # parameter error
 if [[ ! -n $selected_build_type ]] || [[ ! -n $selected_config_file ]]; then
 	display_help
-	select_config
+	select_config_with_buildtype
 fi
 
 echo "Used build type:"$selected_build_type
@@ -127,8 +125,6 @@ echo "work_board:"$work_board
 datename=$(date +%Y%m%d)-$(date +%H%M%S)
 ./build-yocto.sh $work_board "debian" $selected_build_type 2>&1 | tee log/build-yocto-$datename.txt
 
-./copy_debs_from_yocto.sh 2>&1 | tee log/build-copy-$datename.txt
-
 pwd
 
 
diff --git a/env/build-yocto.sh b/env/build-yocto.sh
index 5223855..4d1d654 100755
--- a/env/build-yocto.sh
+++ b/env/build-yocto.sh
@@ -32,13 +32,12 @@ display_help() {
 
 
 
-## select_config
+## get_suitable_board
 get_suitable_board() {
 echo "get_suitable_board:" $1 " " $2
 	TARGET_MACHINE=$1
 	BUILD_TARGET_OS=$2
 	if [ $BUILD_TARGET_OS == "debian" ]; then
-		BUILD_PATH="build-debs"
 		BUILD_TARGET="amlogic-debian"
 		if [ $TARGET_MACHINE == "T7-AN400" ]; then
 			TARGET_BOARD="mesont7-an400-debian-5.15"
@@ -52,9 +51,10 @@ echo "get_suitable_board:" $1 " " $2
 			TARGET_BOARD="mesonsc2-ah212-debian-5.15"
 		else
 			TARGET_BOARD="mesont7-an400-debian-5.15"
+			TARGET_MACHINE="T7-AN400"
 		fi
+		BUILD_PATH="build-debs-"$TARGET_MACHINE
 	else # yocto
-		BUILD_PATH="build"
 		BUILD_TARGET="amlogic-yocto"
 		if [ $TARGET_MACHINE == "T7-AN400" ]; then
 			TARGET_BOARD="mesont7-an400-5.15"
@@ -68,7 +68,9 @@ echo "get_suitable_board:" $1 " " $2
 			TARGET_BOARD="mesonsc2-ah212-5.15"
 		else
 			TARGET_BOARD="mesont7-an400-5.15"
+			TARGET_MACHINE="T7-AN400"
 		fi
+		BUILD_PATH="build-yocto-"$TARGET_MACHINE
 	fi
 	echo "BUILD_PATH:"$BUILD_PATH
 	echo "BUILD_TARGET:"$BUILD_TARGET
@@ -105,8 +107,28 @@ fi
 export https_proxy=10.78.20.250:3128
 export BUILD_DIR=$PWD/$BUILD_PATH
 source meta-meson/aml-setenv.sh $TARGET_BOARD
+if [ $? -eq 0 ]
+then
+	echo "source meta-meson/aml-setenv.sh $TARGET_BOARD Successfully"
+else
+	echo "source meta-meson/aml-setenv.sh $TARGET_BOARD Failure"
+	exit 1
+fi
+
 bitbake $BUILD_TARGET
+if [ $? -eq 0 ]
+then
+	echo "bitbake $BUILD_TARGET Successfully"
+else
+	echo "bitbake $BUILD_TARGET Failure"
+	exit 1
+fi
 
+cd ..
+if [ $BUILD_TARGET_OS == "debian" ]; then
+	# copy debs to amlbian
+	./copy_debs_from_yocto.sh
+fi
 
 
 
diff --git a/env/copy_debs_from_yocto.sh b/env/copy_debs_from_yocto.sh
index 1e11ca9..4891a76 100755
--- a/env/copy_debs_from_yocto.sh
+++ b/env/copy_debs_from_yocto.sh
@@ -1,10 +1,14 @@
 #!/bin/bash
 
+SHELL_FILE_NAME=${BASH_SOURCE}
+SHELL_FILE_NAME=$(basename "$SHELL_FILE_NAME")
+
+echo $SHELL_FILE_NAME" start"
 echo "All needed copy debs should be copied successfully, or you should check the yocto build result."
 
 BUILDDIR=`echo $BUILD_DIR`
 if [ ! -n "$BUILDDIR" ]; then
-    BUILDDIR=build-debs
+    BUILDDIR=build-debs-$WORK_BOARD
 fi
 
 DEB_DIR=$BUILDDIR/tmp/deploy/deb
@@ -254,6 +258,7 @@ for debs in ${packages_arr[@]};do
         done
     else
         echo "======do not find $debs directory========="
+        exit 1
     fi
 done
 
@@ -274,6 +279,7 @@ for debs in ${kernel_mod_arr[@]};do
         done
     else
         echo "======do not find $debs directory========="
+        exit 1
     fi
 done
 
@@ -294,6 +300,7 @@ for debs in ${all_poky_arr[@]};do
         done
     else
         echo "======do not find $debs directory========="
+        exit 1
     fi
 done
 
@@ -305,6 +312,7 @@ if [ $? == 0 ]; then
     cp -f $file $AMLBIAN_DEBS_DIR/wififw
 else
     echo "======do not find $debs directory========="
+    exit 1
 fi
 
 
@@ -382,6 +390,7 @@ if [[ " ${packages_arr[@]} " =~ " mediactrlsrc " ]]; then
             rm -rf $GST_DEBS_TMP
         else
             echo "======do not find $debs directory========="
+            exit 1
         fi
     done
 
@@ -411,6 +420,7 @@ sig_deb_arr=(gstreamer1.0-plugins-bad-waylandsink)
             rm -rf $GST_DEBS_TMP
         else
             echo "======do not find $debs directory========="
+            exit 1
         fi
     done
 
@@ -421,5 +431,6 @@ if [ -f $VERSION_PATH/version.txt ]; then
 	mkdir -p $ETC_PATH
   	cp -f $VERSION_PATH/version.txt $ETC_PATH/amldebs_version.txt
 else
-  echo "======do not find version.txt========="
+    echo "======do not find version.txt========="
+    exit 1
 fi
diff --git a/env/docker-run-debian.sh b/env/docker-run-debian.sh
index 1e90432..5c098f3 100755
--- a/env/docker-run-debian.sh
+++ b/env/docker-run-debian.sh
@@ -68,7 +68,7 @@ NEED_BUILD=
 
 ## select_config
 select_config() {
-	arr=($(find amlbian -maxdepth 1 -name "*.conf"))
+	arr=($(find amlbian -maxdepth 1 -name "*.conf" | sort))
 	echo "Select the conf you need:"
 	declare -i NUM=0
 	for data in ${arr[@]}
@@ -118,7 +118,7 @@ if [[ $command == sh* ]]; then
 	command=${command/\)/_AML_POST_BRACKET_}
 fi
 
-echo "Used config file:"$DEFAULT_CONFIG_FILE
+echo "Used config file:"$DEFAULT_CONFIG_FILE.conf
 echo "command"="$command"
 
 #create link
diff --git a/env/update-code.sh b/env/update-code.sh
index acedb1d..00fbaa9 100755
--- a/env/update-code.sh
+++ b/env/update-code.sh
@@ -12,8 +12,14 @@ save-to-stash() {
 
 	if [[ -n $(git diff --stat)  ]]; then
 		git stash save -u "auto update code save" --include-untracked
-		touch .git-auto-save
-		echo ""$GIT_PATH": save to stash"
+		if [ $? -eq 0 ]
+		then
+			touch .git-auto-save
+			echo ""$GIT_PATH": save to stash"
+		else
+			echo ""$GIT_PATH": git stash save -u "auto update code save" --include-untracked Failure"
+			exit 1
+		fi
 	else
 		echo ""$GIT_PATH": no update, needn't save"
 	fi
@@ -33,7 +39,7 @@ restore-from-stash() {
 		then
 			echo ""$GIT_PATH": restore from stash"
 			rm .git-auto-save
-			git stash remove stash@{0}
+#			git stash drop stash@{0}
 		else
 			echo ""$GIT_PATH": git stash apply stash@{0} Failure"
 			exit 1
@@ -45,21 +51,30 @@ restore-from-stash() {
 }
 
 
+# get all the changed Repositories
 All_changed_repo=($(repo status | grep 'project' | sed 's/project //' | sed 's/(\*\*\* NO BRANCH \*\*\*)//'))
 
-# save to stash
+# save local changes to stash cache
 for changed_repo in ${All_changed_repo[@]}
 do
 	save-to-stash ${changed_repo}
 done
 
 
+# sync newest codes to local
 echo "repo sync..."
 repo sync
+if [ $? -eq 0 ]
+then
+	echo "repo sync Successfully"
+else
+	echo "repo sync Failure"
+	exit 1
+fi
 
 
 
-# restore from stash
+# restore local changes from stash cache
 for changed_repo in ${All_changed_repo[@]}
 do
 	restore-from-stash ${changed_repo}
-- 
2.25.1

