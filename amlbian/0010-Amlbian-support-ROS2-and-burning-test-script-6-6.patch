From 108858fd18cba68c5e34dd744e6bb2ec00106691 Mon Sep 17 00:00:00 2001
From: "guoping.li" <guoping.li@amlogic.com>
Date: Thu, 1 Jun 2023 17:30:59 +0800
Subject: [PATCH] Amlbian: support ROS2 and burning test script [6/6]

PD#SWPL-126024

Problem:
ROS2 depend QT5wayland,
improve burning test script

Solution:
use aptitude for libgbm install
burning test will exit when failed
repeat times to 1M

Verify:
check ROS2 work well
check burning test OK
It will increase image size from 6.2G to 6.4G, about 200M


Signed-off-by: guoping.li <guoping.li@amlogic.com>
Change-Id: I6d97e482162c77749d1755f0f90c7c15d7dd996a
---
 .../test/camera-test/mipi-camera-burning.sh   |  25 ++-
 .../test/camera-test/mipi-camera-capture.sh   |   9 +-
 .../test/camera-test/mipi-camera-nn.sh        |  25 ++-
 .../test/camera-test/mipi-camera-preview.sh   |  22 ++-
 .../test/camera-test/mipi-camera-recorder.sh  |  11 +-
 archives/features/test/camera-test/readme.md  |  94 ++++++++++
 archives/features/test/camera-test/readme.txt |  66 -------
 .../test/camera-test/usb-camera-burning.sh    |  25 ++-
 .../test/camera-test/usb-camera-capture.sh    |   9 +-
 .../test/camera-test/usb-camera-nn.sh         |  25 ++-
 .../test/camera-test/usb-camera-preview.sh    |  23 ++-
 .../test/camera-test/usb-camera-recorder.sh   |  11 +-
 .../test/gpu-test/{readme.txt => readme.md}   |   4 +-
 .../test/hdmirx-test/hdmirx-burning.sh        |  25 ++-
 .../test/hdmirx-test/hdmirx-capture.sh        |   7 +-
 .../hdmirx-test/hdmirx-preview-osdlayer.sh    |  21 ++-
 .../hdmirx-test/hdmirx-preview-videolayer.sh  |  21 ++-
 .../test/hdmirx-test/hdmirx-recorder.sh       |   9 +-
 .../hdmirx-test/{readme.txt => readme.md}     |  16 +-
 .../install-test/docker/install-docker.sh     |   5 +-
 .../docker/{readme.txt => readme.md}          |  40 ++++-
 .../test/install-test/ros2/install-ros2.sh    |  35 ++--
 .../features/test/install-test/ros2/readme.md | 161 ++++++++++++++++++
 .../test/install-test/ros2/readme.txt         |  25 ---
 .../test/playback-test/playback-burning.sh    |  40 +++++
 .../test/playback-test/playback-test.sh       |  16 ++
 .../{readme.txt => readme.md}                 |  18 +-
 .../test/screencapture-test/screen-burning.sh |  25 ++-
 .../test/screencapture-test/screen-capture.sh |   7 +-
 .../test/screencapture-test/screen-preview.sh |  15 ++
 .../screencapture-test/screen-recorder.sh     |   9 +-
 config/functions/build-base-rootfs            |   2 +-
 32 files changed, 657 insertions(+), 189 deletions(-)
 create mode 100644 archives/features/test/camera-test/readme.md
 delete mode 100644 archives/features/test/camera-test/readme.txt
 rename archives/features/test/gpu-test/{readme.txt => readme.md} (82%)
 rename archives/features/test/hdmirx-test/{readme.txt => readme.md} (62%)
 mode change 100644 => 100755 archives/features/test/install-test/docker/install-docker.sh
 rename archives/features/test/install-test/docker/{readme.txt => readme.md} (77%)
 create mode 100644 archives/features/test/install-test/ros2/readme.md
 delete mode 100644 archives/features/test/install-test/ros2/readme.txt
 create mode 100755 archives/features/test/playback-test/playback-burning.sh
 rename archives/features/test/screencapture-test/{readme.txt => readme.md} (82%)

diff --git a/archives/features/test/camera-test/mipi-camera-burning.sh b/archives/features/test/camera-test/mipi-camera-burning.sh
index 2a20809..bbb93cf 100755
--- a/archives/features/test/camera-test/mipi-camera-burning.sh
+++ b/archives/features/test/camera-test/mipi-camera-burning.sh
@@ -5,10 +5,13 @@
 if [ $# == 1 ];then
     LOOP_CNT=$1
 else
-    LOOP_CNT=100
+    LOOP_CNT=1000000
 fi
 
 
+FILE_PATH=~/test_result
+
+
 i=1
 
 while [ $i -le  $LOOP_CNT ]
@@ -16,9 +19,29 @@ do
     echo "loop i="$i
 
     ./mipi-camera-capture.sh 1920 1080
+    [[ ! -s "$FILE_PATH/mipi-camera-capture.pass" ]] || break
+    rm "$FILE_PATH/mipi-camera-capture.pass"
+
     ./mipi-camera-recorder.sh 1920 1080 h264
+    [[ ! -s "$FILE_PATH/mipi-camera-recorder.pass" ]] || break
+    rm "$FILE_PATH/mipi-camera-recorder.pass"
+
     ./mipi-camera-recorder.sh 1920 1080 h265
+    [[ ! -s "$FILE_PATH/mipi-camera-recorder.pass" ]] || break
+    rm "$FILE_PATH/mipi-camera-recorder.pass"
+
+    # check system memory information
+    echo "free" && free
+    echo "cat /proc/meminfo" && cat /proc/meminfo
+    echo "vmstat -s" && vmstat -s
 
     let i++
 done
 
+
+if [ $i -le  $LOOP_CNT ]; then
+    echo "burning test failed, total=$LOOP_CNT, current=$i"
+else
+    echo "burning test pass, total=$LOOP_CNT, current=$i"
+fi
+
diff --git a/archives/features/test/camera-test/mipi-camera-capture.sh b/archives/features/test/camera-test/mipi-camera-capture.sh
index f58eba5..a94340e 100755
--- a/archives/features/test/camera-test/mipi-camera-capture.sh
+++ b/archives/features/test/camera-test/mipi-camera-capture.sh
@@ -3,14 +3,14 @@
 
 FILE_EXT="jpg"
 
+DEVICE="media0"
+WIDTH=1920
+HEIGHT=1080
+
 if [ $# == 3 ];then
     DEVICE=$1
     WIDTH=$2
     HEIGHT=$3
-else
-    DEVICE="media0"
-    WIDTH=1920
-    HEIGHT=1080
 fi
 
 # fixed
@@ -31,6 +31,7 @@ echo $FULL_FILE_PATH
 display_help() {
 	echo "\
 	***************************HELP**************************
+    TEST CASE : $TEST_CASE_NAME
     Please make sure the only one camera is plugin
     if no parameters, $DEVICE will be act as the default camera
 
diff --git a/archives/features/test/camera-test/mipi-camera-nn.sh b/archives/features/test/camera-test/mipi-camera-nn.sh
index ef8243d..af57e83 100755
--- a/archives/features/test/camera-test/mipi-camera-nn.sh
+++ b/archives/features/test/camera-test/mipi-camera-nn.sh
@@ -1,22 +1,37 @@
 #!/bin/bash
 
 
+DEVICE="media0"
+WIDTH=1920
+HEIGHT=1080
+DETECT_MODE="amlfd"
+
 if [ $# == 4 ];then
     DEVICE=$1
     WIDTH=$2
     HEIGHT=$3
     DETECT_MODE=$4
-else
-    DEVICE="media0"
-    WIDTH=1920
-    HEIGHT=1080
-    DETECT_MODE="amlfd"
 fi
 
+# fixed
+###############################################################
+SHELL_FILE_NAME=${BASH_SOURCE}
+SHELL_FILE_NAME=$(basename "$SHELL_FILE_NAME")
+TEST_CASE_NAME=${SHELL_FILE_NAME%.*}
+SHORT_FILE_PATH=$TEST_CASE_NAME.$FILE_EXT
+echo $SHORT_FILE_PATH
+
+FILE_PATH=~/test_result
+mkdir -p $FILE_PATH
+FULL_FILE_PATH=$FILE_PATH/$SHORT_FILE_PATH
+echo $FULL_FILE_PATH
+###############################################################
+
 ## Display parameters
 display_help() {
 	echo "\
 	***************************HELP**************************
+    TEST CASE : $TEST_CASE_NAME
     Please make sure the only one camera is plugin
     if no parameters, $DEVICE will be act as the default camera
 
diff --git a/archives/features/test/camera-test/mipi-camera-preview.sh b/archives/features/test/camera-test/mipi-camera-preview.sh
index 1bbde28..177a8b8 100755
--- a/archives/features/test/camera-test/mipi-camera-preview.sh
+++ b/archives/features/test/camera-test/mipi-camera-preview.sh
@@ -1,20 +1,34 @@
 #!/bin/bash
 
 
+DEVICE="media0"
+WIDTH=1920
+HEIGHT=1080
 if [ $# == 3 ];then
     DEVICE=$1
     WIDTH=$2
     HEIGHT=$3
-else
-    DEVICE="media0"
-    WIDTH=1920
-    HEIGHT=1080
 fi
 
+# fixed
+###############################################################
+SHELL_FILE_NAME=${BASH_SOURCE}
+SHELL_FILE_NAME=$(basename "$SHELL_FILE_NAME")
+TEST_CASE_NAME=${SHELL_FILE_NAME%.*}
+SHORT_FILE_PATH=$TEST_CASE_NAME.$FILE_EXT
+echo $SHORT_FILE_PATH
+
+FILE_PATH=~/test_result
+mkdir -p $FILE_PATH
+FULL_FILE_PATH=$FILE_PATH/$SHORT_FILE_PATH
+echo $FULL_FILE_PATH
+###############################################################
+
 ## Display parameters
 display_help() {
 	echo "\
 	***************************HELP**************************
+    TEST CASE : $TEST_CASE_NAME
     Please make sure the only one camera is plugin
     if no parameters, $DEVICE will be act as the default camera
 
diff --git a/archives/features/test/camera-test/mipi-camera-recorder.sh b/archives/features/test/camera-test/mipi-camera-recorder.sh
index 76d52c7..6bd49cf 100755
--- a/archives/features/test/camera-test/mipi-camera-recorder.sh
+++ b/archives/features/test/camera-test/mipi-camera-recorder.sh
@@ -2,16 +2,16 @@
 
 FILE_EXT="mp4"
 
+DEVICE="media0"
+WIDTH=1920
+HEIGHT=1080
+PARSE_TYPE="h264parse"
+
 if [ $# == 4 ];then
     DEVICE=$1
     WIDTH=$2
     HEIGHT=$3
     PARSE_TYPE=$4"parse"
-else
-    DEVICE="media0"
-    WIDTH=1920
-    HEIGHT=1080
-    PARSE_TYPE="h264parse"
 fi
 
 # fixed
@@ -32,6 +32,7 @@ echo $FULL_FILE_PATH
 display_help() {
 	echo "\
 	***************************HELP**************************
+    TEST CASE : $TEST_CASE_NAME
     Please make sure the only one camera is plugin
     if no parameters, $DEVICE will be act as the default camera
 
diff --git a/archives/features/test/camera-test/readme.md b/archives/features/test/camera-test/readme.md
new file mode 100644
index 0000000..73a575f
--- /dev/null
+++ b/archives/features/test/camera-test/readme.md
@@ -0,0 +1,94 @@
+For single camera test, you can use the script directly,
+For multiple camera test,
+
+You should check the device name. then start multiple instance.
+The 2 camera can use at the same time.
+
+
+## 2 mipi camera preview
+```bash
+$ ls /dev/media*
+/dev/media0
+/dev/media2
+```
+
+You can use the following command to preview 1st camera
+```bash
+$./mipi-camera-preview.sh
+```
+
+You can use the following command to preview 2nd camera
+```bash
+$./mipi-camera-preview.sh media2
+```
+
+
+## 2 USB camera preview
+```bash
+$ ls /dev/video*
+/dev/video0
+/dev/video1
+```
+
+You can use the following command to preview 1st camera
+```bash
+$./usb-camera-preview.sh
+```
+
+You can use the following command to preview 2nd camera
+```bash
+$./usb-camera-preview.sh video1
+```
+
+## example
+### USB
+```bash
+# capture camera to a jpeg file
+./usb-camera-capture.sh
+./usb-camera-capture.sh video0 1920 1080
+./usb-camera-capture.sh video0 1280 720
+./usb-camera-capture.sh video0 640 480
+
+# show camera in OSD layer
+./usb-camera-preview.sh
+./usb-camera-preview.sh video0 1920 1080
+./usb-camera-preview.sh video0 1280 720
+./usb-camera-preview.sh video0 640 480
+
+# show camera with NN result in OSD layer
+./usb-camera-nn.sh
+./usb-camera-nn.sh video0 1280 720 amlfd
+./usb-camera-nn.sh video0 1280 720 yolov3
+
+# recorde camera stream to a mp4 file
+./usb-camera-recorder.sh
+./usb-camera-recorder.sh video0 1920 1080 h264
+./usb-camera-recorder.sh video0 1920 1080 h265
+```
+
+### MIPI
+```bash
+# capture camera to a jpeg file
+./mipi-camera-capture.sh
+./mipi-camera-capture.sh media0 1920 1080
+./mipi-camera-capture.sh media0 3840 2160
+
+# show camera in OSD layer
+./mipi-camera-preview.sh
+./mipi-camera-preview.sh media0 1920 1080
+./mipi-camera-preview.sh media0 3840 2160
+
+# show camera with NN result in OSD layer
+./mipi-camera-nn.sh
+./mipi-camera-nn.sh 1920 media0 1080 amlfd
+./mipi-camera-nn.sh 1920 media0 1080 yolov3
+./mipi-camera-nn.sh 3840 media0 2160 amlfd
+./mipi-camera-nn.sh 3840 media0 2160 yolov3
+
+# recorde camera stream to a mp4 file
+./mipi-camera-recorder.sh
+./mipi-camera-recorder.sh media0 1920 1080 h264
+./mipi-camera-recorder.sh media0 1920 1080 h265
+./mipi-camera-recorder.sh media0 3840 2160 h264
+./mipi-camera-recorder.sh media0 3840 2160 h265
+```
diff --git a/archives/features/test/camera-test/readme.txt b/archives/features/test/camera-test/readme.txt
deleted file mode 100644
index 086f205..0000000
--- a/archives/features/test/camera-test/readme.txt
+++ /dev/null
@@ -1,66 +0,0 @@
-For single camera test, you can use the script derectly,
-For multiple camera test, 
-
-You should check the device name. then start multiple instance.
-The 2 camera can use at the same time.
-
-
-[2 mipi camera preview]
-$ ls /dev/media*
-/dev/media0
-/dev/media2
-
-You can use the following command to preview 1st camera
-$./mipi-camera-preview.sh
-
-You can use the following command to preview 2nd camera
-$./mipi-camera-preview.sh media2
-
-
-
-[2 USB camera preview]
-$ ls /dev/video*
-/dev/video0
-/dev/video1
-
-You can use the following command to preview 1st camera
-$./usb-camera-preview.sh
-
-You can use the following command to preview 2nd camera
-$./usb-camera-preview.sh video1
-
-
-[example]:
-USB
-./usb-camera-capture.sh 1920 1080
-./usb-camera-capture.sh 1280 720
-./usb-camera-capture.sh 640 480 
-
-./usb-camera-preview.sh 1920 1080
-./usb-camera-preview.sh 1280 720
-./usb-camera-preview.sh 640 480
-
-./usb-camera-nn.sh 1280 720 amlfd
-./usb-camera-nn.sh 1280 720 yolov3
-
-./usb-camera-recorder.sh 1920 1080 h264
-./usb-camera-recorder.sh 1920 1080 h265
-
-
-MIPI
-./mipi-camera-capture.sh 1920 1080
-./mipi-camera-capture.sh 3840 2160
-
-./mipi-camera-preview.sh 1920 1080
-./mipi-camera-preview.sh 3840 2160
-
-./mipi-camera-nn.sh 1920 1080 amlfd
-./mipi-camera-nn.sh 1920 1080 yolov3
-./mipi-camera-nn.sh 3840 2160 amlfd
-./mipi-camera-nn.sh 3840 2160 yolov3
-
-./mipi-camera-recorder.sh 1920 1080 h264
-./mipi-camera-recorder.sh 1920 1080 h265
-./mipi-camera-recorder.sh 3840 2160 h264
-./mipi-camera-recorder.sh 3840 2160 h265
-
diff --git a/archives/features/test/camera-test/usb-camera-burning.sh b/archives/features/test/camera-test/usb-camera-burning.sh
index b0fb7d0..8625350 100755
--- a/archives/features/test/camera-test/usb-camera-burning.sh
+++ b/archives/features/test/camera-test/usb-camera-burning.sh
@@ -1,14 +1,15 @@
 #!/bin/bash
 
 
-
 if [ $# == 1 ];then
     LOOP_CNT=$1
 else
-    LOOP_CNT=100
+    LOOP_CNT=1000000
 fi
 
 
+FILE_PATH=~/test_result
+
 i=1
 
 while [ $i -le  $LOOP_CNT ]
@@ -16,9 +17,29 @@ do
     echo "loop i="$i
 
     ./usb-camera-capture.sh 1920 1080
+    [[ ! -s "$FILE_PATH/usb-camera-capture.pass" ]] || break
+    rm "$FILE_PATH/usb-camera-capture.pass"
+
     ./usb-camera-recorder.sh 1920 1080 h264
+    [[ ! -s "$FILE_PATH/usb-camera-recorder.pass" ]] || break
+    rm "$FILE_PATH/usb-camera-recorder.pass"
+
     ./usb-camera-recorder.sh 1920 1080 h265
+    [[ ! -s "$FILE_PATH/usb-camera-recorder.pass" ]] || break
+    rm "$FILE_PATH/usb-camera-recorder.pass"
+
+    # check system memory information
+    echo "free" && free
+    echo "cat /proc/meminfo" && cat /proc/meminfo
+    echo "vmstat -s" && vmstat -s
 
     let i++
 done
 
+
+if [ $i -le  $LOOP_CNT ]; then
+    echo "burning test failed, total=$LOOP_CNT, current=$i"
+else
+    echo "burning test pass, total=$LOOP_CNT, current=$i"
+fi
+
diff --git a/archives/features/test/camera-test/usb-camera-capture.sh b/archives/features/test/camera-test/usb-camera-capture.sh
index 1e76821..e4687f9 100755
--- a/archives/features/test/camera-test/usb-camera-capture.sh
+++ b/archives/features/test/camera-test/usb-camera-capture.sh
@@ -3,14 +3,14 @@
 
 FILE_EXT="jpg"
 
+DEVICE="video0"
+WIDTH=1920
+HEIGHT=1080
+
 if [ $# == 3 ];then
     DEVICE=$1
     WIDTH=$2
     HEIGHT=$3
-else
-    DEVICE="video0"
-    WIDTH=1920
-    HEIGHT=1080
 fi
 
 # fixed
@@ -31,6 +31,7 @@ echo $FULL_FILE_PATH
 display_help() {
 	echo "\
 	***************************HELP**************************
+    TEST CASE : $TEST_CASE_NAME
     Please make sure the only one camera is plugin
     if no parameters, $DEVICE will be act as the default camera
 
diff --git a/archives/features/test/camera-test/usb-camera-nn.sh b/archives/features/test/camera-test/usb-camera-nn.sh
index d13cd28..7b272ef 100755
--- a/archives/features/test/camera-test/usb-camera-nn.sh
+++ b/archives/features/test/camera-test/usb-camera-nn.sh
@@ -1,22 +1,37 @@
 #!/bin/bash
 
 
+DEVICE="video0"
+WIDTH=640
+HEIGHT=480
+DETECT_MODE="amlfd"
+
 if [ $# == 4 ];then
     DEVICE=$1
     WIDTH=$2
     HEIGHT=$3
     DETECT_MODE=$4
-else
-    DEVICE="video0"
-    WIDTH=1920
-    HEIGHT=1080
-    DETECT_MODE="amlfd"
 fi
 
+# fixed
+###############################################################
+SHELL_FILE_NAME=${BASH_SOURCE}
+SHELL_FILE_NAME=$(basename "$SHELL_FILE_NAME")
+TEST_CASE_NAME=${SHELL_FILE_NAME%.*}
+SHORT_FILE_PATH=$TEST_CASE_NAME.$FILE_EXT
+echo $SHORT_FILE_PATH
+
+FILE_PATH=~/test_result
+mkdir -p $FILE_PATH
+FULL_FILE_PATH=$FILE_PATH/$SHORT_FILE_PATH
+echo $FULL_FILE_PATH
+###############################################################
+
 ## Display parameters
 display_help() {
 	echo "\
 	***************************HELP**************************
+    TEST CASE : $TEST_CASE_NAME
     Please make sure the only one camera is plugin
     if no parameters, $DEVICE will be act as the default camera
 
diff --git a/archives/features/test/camera-test/usb-camera-preview.sh b/archives/features/test/camera-test/usb-camera-preview.sh
index 5441b33..faf6ff3 100755
--- a/archives/features/test/camera-test/usb-camera-preview.sh
+++ b/archives/features/test/camera-test/usb-camera-preview.sh
@@ -1,21 +1,36 @@
 #!/bin/bash
 
 
+DEVICE="video0"
+WIDTH=1920
+HEIGHT=1080
+
 if [ $# == 3 ];then
     DEVICE=$1
     WIDTH=$2
     HEIGHT=$3
-else
-    DEVICE="video0"
-    WIDTH=1920
-    HEIGHT=1080
 fi
 
+# fixed
+###############################################################
+SHELL_FILE_NAME=${BASH_SOURCE}
+SHELL_FILE_NAME=$(basename "$SHELL_FILE_NAME")
+TEST_CASE_NAME=${SHELL_FILE_NAME%.*}
+SHORT_FILE_PATH=$TEST_CASE_NAME.$FILE_EXT
+echo $SHORT_FILE_PATH
+
+FILE_PATH=~/test_result
+mkdir -p $FILE_PATH
+FULL_FILE_PATH=$FILE_PATH/$SHORT_FILE_PATH
+echo $FULL_FILE_PATH
+###############################################################
+
 
 ## Display parameters
 display_help() {
 	echo "\
 	***************************HELP**************************
+    TEST CASE : $TEST_CASE_NAME
     Please make sure the only one camera is plugin
     if no parameters, $DEVICE will be act as the default camera
 
diff --git a/archives/features/test/camera-test/usb-camera-recorder.sh b/archives/features/test/camera-test/usb-camera-recorder.sh
index dd1d445..e7416ca 100755
--- a/archives/features/test/camera-test/usb-camera-recorder.sh
+++ b/archives/features/test/camera-test/usb-camera-recorder.sh
@@ -2,16 +2,16 @@
 
 FILE_EXT="mp4"
 
+DEVICE="video0"
+WIDTH=1920
+HEIGHT=1080
+PARSE_TYPE="h264parse"
+
 if [ $# == 4 ];then
     DEVICE=$1
     WIDTH=$2
     HEIGHT=$3
     PARSE_TYPE=$4"parse"
-else
-    DEVICE="video0"
-    WIDTH=1920
-    HEIGHT=1080
-    PARSE_TYPE="h264parse"
 fi
 
 
@@ -33,6 +33,7 @@ echo $FULL_FILE_PATH
 display_help() {
 	echo "\
 	***************************HELP**************************
+    TEST CASE : $TEST_CASE_NAME
     Please make sure the only one camera is plugin
     if no parameters, $DEVICE will be act as the default camera
 
diff --git a/archives/features/test/gpu-test/readme.txt b/archives/features/test/gpu-test/readme.md
similarity index 82%
rename from archives/features/test/gpu-test/readme.txt
rename to archives/features/test/gpu-test/readme.md
index 7f57be4..80e0b1c 100644
--- a/archives/features/test/gpu-test/readme.txt
+++ b/archives/features/test/gpu-test/readme.md
@@ -1,10 +1,10 @@
-1. glmark2-es2-wayland.sh
+## glmark2-es2-wayland.sh
 It's for opengles2 test, in config, default develop version, the glmark2-es2-wayland is already installed.
 you can run this script directly.
 
 
 
-2. gpu-test.sh
+## gpu-test.sh
 It will check whether the GPU driver is insmod.
 
 
diff --git a/archives/features/test/hdmirx-test/hdmirx-burning.sh b/archives/features/test/hdmirx-test/hdmirx-burning.sh
index 59131fb..ae438df 100755
--- a/archives/features/test/hdmirx-test/hdmirx-burning.sh
+++ b/archives/features/test/hdmirx-test/hdmirx-burning.sh
@@ -5,10 +5,13 @@
 if [ $# == 1 ];then
     LOOP_CNT=$1
 else
-    LOOP_CNT=100
+    LOOP_CNT=1000000
 fi
 
 
+FILE_PATH=~/test_result
+
+
 i=1
 
 while [ $i -le  $LOOP_CNT ]
@@ -16,9 +19,29 @@ do
     echo "loop i="$i
 
     ./hdmirx-capture.sh 1920 1080
+    [[ ! -s "$FILE_PATH/hdmirx-capture.pass" ]] || break
+    rm "$FILE_PATH/hdmirx-capture.pass"
+
     ./hdmirx-recorder.sh 1920 1080 h264
+    [[ ! -s "$FILE_PATH/hdmirx-recorder.pass" ]] || break
+    rm "$FILE_PATH/hdmirx-recorder.pass"
+
     ./hdmirx-recorder.sh 1920 1080 h265
+    [[ ! -s "$FILE_PATH/hdmirx-recorder.pass" ]] || break
+    rm "$FILE_PATH/hdmirx-recorder.pass"
+
+    # check system memory information
+    echo "free" && free
+    echo "cat /proc/meminfo" && cat /proc/meminfo
+    echo "vmstat -s" && vmstat -s
 
     let i++
 done
 
+
+if [ $i -le  $LOOP_CNT ]; then
+    echo "burning test failed, total=$LOOP_CNT, current=$i"
+else
+    echo "burning test pass, total=$LOOP_CNT, current=$i"
+fi
+
diff --git a/archives/features/test/hdmirx-test/hdmirx-capture.sh b/archives/features/test/hdmirx-test/hdmirx-capture.sh
index 6e30f38..f1b84fa 100755
--- a/archives/features/test/hdmirx-test/hdmirx-capture.sh
+++ b/archives/features/test/hdmirx-test/hdmirx-capture.sh
@@ -4,12 +4,12 @@
 DEVICE="video71"
 FILE_EXT="jpg"
 
+WIDTH=1920
+HEIGHT=1080
+
 if [ $# == 2 ];then
     WIDTH=$1
     HEIGHT=$2
-else
-    WIDTH=1920
-    HEIGHT=1080
 fi
 
 # fixed
@@ -30,6 +30,7 @@ echo $FULL_FILE_PATH
 display_help() {
 	echo "\
 	***************************HELP**************************
+    TEST CASE : $TEST_CASE_NAME
     Please make sure plugin HDMI rx device
 
     EXAMPLES:
diff --git a/archives/features/test/hdmirx-test/hdmirx-preview-osdlayer.sh b/archives/features/test/hdmirx-test/hdmirx-preview-osdlayer.sh
index a7ba6bd..e2902fd 100755
--- a/archives/features/test/hdmirx-test/hdmirx-preview-osdlayer.sh
+++ b/archives/features/test/hdmirx-test/hdmirx-preview-osdlayer.sh
@@ -3,18 +3,33 @@
 
 DEVICE="video71"
 
+WIDTH=1920
+HEIGHT=1080
+
 if [ $# == 2 ];then
     WIDTH=$1
     HEIGHT=$2
-else
-    WIDTH=1920
-    HEIGHT=1080
 fi
 
+# fixed
+###############################################################
+SHELL_FILE_NAME=${BASH_SOURCE}
+SHELL_FILE_NAME=$(basename "$SHELL_FILE_NAME")
+TEST_CASE_NAME=${SHELL_FILE_NAME%.*}
+SHORT_FILE_PATH=$TEST_CASE_NAME.$FILE_EXT
+echo $SHORT_FILE_PATH
+
+FILE_PATH=~/test_result
+mkdir -p $FILE_PATH
+FULL_FILE_PATH=$FILE_PATH/$SHORT_FILE_PATH
+echo $FULL_FILE_PATH
+###############################################################
+
 ## Display parameters
 display_help() {
 	echo "\
 	***************************HELP**************************
+    TEST CASE : $TEST_CASE_NAME
     Please make sure plugin HDMI rx device
 
     EXAMPLES:
diff --git a/archives/features/test/hdmirx-test/hdmirx-preview-videolayer.sh b/archives/features/test/hdmirx-test/hdmirx-preview-videolayer.sh
index 3f5f3af..b5107f4 100755
--- a/archives/features/test/hdmirx-test/hdmirx-preview-videolayer.sh
+++ b/archives/features/test/hdmirx-test/hdmirx-preview-videolayer.sh
@@ -3,18 +3,33 @@
 
 DEVICE="video71"
 
+WIDTH=1920
+HEIGHT=1080
+
 if [ $# == 2 ];then
     WIDTH=$1
     HEIGHT=$2
-else
-    WIDTH=1920
-    HEIGHT=1080
 fi
 
+# fixed
+###############################################################
+SHELL_FILE_NAME=${BASH_SOURCE}
+SHELL_FILE_NAME=$(basename "$SHELL_FILE_NAME")
+TEST_CASE_NAME=${SHELL_FILE_NAME%.*}
+SHORT_FILE_PATH=$TEST_CASE_NAME.$FILE_EXT
+echo $SHORT_FILE_PATH
+
+FILE_PATH=~/test_result
+mkdir -p $FILE_PATH
+FULL_FILE_PATH=$FILE_PATH/$SHORT_FILE_PATH
+echo $FULL_FILE_PATH
+###############################################################
+
 ## Display parameters
 display_help() {
 	echo "\
 	***************************HELP**************************
+    TEST CASE : $TEST_CASE_NAME
     Please make sure plugin HDMI rx device
 
     EXAMPLES:
diff --git a/archives/features/test/hdmirx-test/hdmirx-recorder.sh b/archives/features/test/hdmirx-test/hdmirx-recorder.sh
index 64440bc..8a92cd5 100755
--- a/archives/features/test/hdmirx-test/hdmirx-recorder.sh
+++ b/archives/features/test/hdmirx-test/hdmirx-recorder.sh
@@ -4,14 +4,14 @@
 DEVICE="video71"
 FILE_EXT="mp4"
 
+WIDTH=1920
+HEIGHT=1080
+PARSE_TYPE="h264parse"
+
 if [ $# == 3 ];then
     WIDTH=$1
     HEIGHT=$2
     PARSE_TYPE=$3"parse"
-else
-    WIDTH=1920
-    HEIGHT=1080
-    PARSE_TYPE="h264parse"
 fi
 
 
@@ -33,6 +33,7 @@ echo $FULL_FILE_PATH
 display_help() {
 	echo "\
 	***************************HELP**************************
+    TEST CASE : $TEST_CASE_NAME
     Please make sure plugin HDMI rx device
 
     EXAMPLES:
diff --git a/archives/features/test/hdmirx-test/readme.txt b/archives/features/test/hdmirx-test/readme.md
similarity index 62%
rename from archives/features/test/hdmirx-test/readme.txt
rename to archives/features/test/hdmirx-test/readme.md
index 6cc5b80..5dcce30 100644
--- a/archives/features/test/hdmirx-test/readme.txt
+++ b/archives/features/test/hdmirx-test/readme.md
@@ -1,20 +1,30 @@
 For HDMI RX capture and recorder.
 
-[example]:
+## example
+```bash
+# capture hdmirx to a jpeg file
+./hdmirx-capture.sh 
 ./hdmirx-capture.sh 1920 1080
 ./hdmirx-capture.sh 3840 2160
 
+# show hdmirx in OSD layer
+./hdmirx-preview-osdlayer.sh
 ./hdmirx-preview-osdlayer.sh 1920 1080
 ./hdmirx-preview-osdlayer.sh 3840 2160
+
+# show hdmirx on video layer, need disable gnome now
+./hdmirx-preview-videolayer.sh
 ./hdmirx-preview-videolayer.sh 1920 1080
 ./hdmirx-preview-videolayer.sh 3840 2160
 
+# recorde hdmirx stream to a mp4 file
+./hdmirx-recorder.sh
 ./hdmirx-recorder.sh 1920 1080 h264
 ./hdmirx-recorder.sh 1920 1080 h265
 ./hdmirx-recorder.sh 3840 2160 h264
 ./hdmirx-recorder.sh 3840 2160 h265
+```
 
-
-[about tvin-port]
+## about tvin-port
 for HDMI RX using video71, the default  tvin-port is 0, 
 it's the 1st video layer. 
diff --git a/archives/features/test/install-test/docker/install-docker.sh b/archives/features/test/install-test/docker/install-docker.sh
old mode 100644
new mode 100755
index e81d2da..dad535d
--- a/archives/features/test/install-test/docker/install-docker.sh
+++ b/archives/features/test/install-test/docker/install-docker.sh
@@ -63,13 +63,12 @@ echo "[*****]install curl..."
 sudo apt-get install -y ca-certificates curl gnupg lsb-release
 
 echo "[*****]get docker key"
-[ -f /etc/apt/keyrings/docker.gpg ] sudo rm /etc/apt/keyrings/docker.gpg
+[[ -f /etc/apt/keyrings/docker.gpg ]] && sudo rm /etc/apt/keyrings/docker.gpg
 sudo install -m 0755 -d /etc/apt/keyrings
 curl -fsSL https://download.docker.com/linux/$DISTRIB_TYPE/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
 sudo chmod a+r /etc/apt/keyrings/docker.gpg
 
-[ -f /etc/apt/keyrings/docker.gpg ] echo "get docker key successfully"
-
+[[ -f /etc/apt/keyrings/docker.gpg ]] && echo "get docker key successfully"
 
 echo \
   "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/$DISTRIB_TYPE \
diff --git a/archives/features/test/install-test/docker/readme.txt b/archives/features/test/install-test/docker/readme.md
similarity index 77%
rename from archives/features/test/install-test/docker/readme.txt
rename to archives/features/test/install-test/docker/readme.md
index 4bb74fc..dd51b9e 100644
--- a/archives/features/test/install-test/docker/readme.txt
+++ b/archives/features/test/install-test/docker/readme.md
@@ -1,12 +1,15 @@
 use install-docker.sh, only one script, you can get the docker in amlbian.
 
-1. check the kernel config, whether it's OK for Docker.
+## check the kernel config, whether it's OK for Docker.
+```bash
 $ ./check-config.sh
+```
 It's from the following webpage.
 curl -s https://raw.githubusercontent.com/docker/docker/master/contrib/check-config.sh | bash
 
 
 check result:
+```bash
 $ ./check-config.sh 
 info: reading kernel config from /proc/config.gz ...
 
@@ -108,15 +111,42 @@ Optional Features:
 
 Limits:
 - /proc/sys/kernel/keys/root_maxkeys: 1000000
+```
 
 
-
-2. install-docker
+## install-docker
+```bash
 $ ./install-docker.sh
+```
+
+After install successfully, it wil show:
+```
+Hello from Docker!
+This message shows that your installation appears to be working correctly.
+
+To generate this message, Docker took the following steps:
+ 1. The Docker client contacted the Docker daemon.
+ 2. The Docker daemon pulled the "hello-world" image from the Docker Hub.
+    (arm64v8)
+ 3. The Docker daemon created a new container from that image which runs the
+    executable that produces the output you are currently reading.
+ 4. The Docker daemon streamed that output to the Docker client, which sent it
+    to your terminal.
+
+To try something more ambitious, you can run an Ubuntu container with:
+ $ docker run -it ubuntu bash
 
-usage :
+Share images, automate workflows, and more with a free Docker ID:
+ https://hub.docker.com/
+
+For more examples and ideas, visit:
+ https://docs.docker.com/get-started/
+```
+
+## usage
+```
 install-docker.sh 		: default is debian
 install-docker.sh debian 	: for debian OS
 install-docker.sh *** 		: for other OS
-
+```
 
diff --git a/archives/features/test/install-test/ros2/install-ros2.sh b/archives/features/test/install-test/ros2/install-ros2.sh
index a708f64..5ce5838 100755
--- a/archives/features/test/install-test/ros2/install-ros2.sh
+++ b/archives/features/test/install-test/ros2/install-ros2.sh
@@ -60,10 +60,10 @@ echo "[*****]get ros key"
 # add "raw.githubusercontent.com" to hosts 
 sudo echo "185.199.108.133 raw.githubusercontent.com" >> /etc/hosts
 
-[ -f /usr/share/keyrings/ros-archive-keyring.gpg ] sudo rm /usr/share/keyrings/ros-archive-keyring.gpg
+[[ -f /usr/share/keyrings/ros-archive-keyring.gpg ]] && sudo rm /usr/share/keyrings/ros-archive-keyring.gpg
 
 sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg
-[ -f /usr/share/keyrings/ros-archive-keyring.gpg ] echo "[*****]get ros key successfully"
+[[ -f /usr/share/keyrings/ros-archive-keyring.gpg ]] && echo "[*****]get ros key successfully"
 
 echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null
 
@@ -75,38 +75,35 @@ sudo apt update -y
 echo "[*****]apt upgrade -y"
 sudo apt upgrade -y
 
-echo "[*****]install ros-humble-desktop, it will cost long time, please wait...(about 1~2 hours)"
-# remove conflict version packages before install
-sudo apt remove -y libgbm1
-sudo apt remove -y libglapi-mesa
+apt list | grep libgbm
+echo "[*****]reinstall the libgbm-dev, make sure the version is match, select n, then y, then y"
+sudo aptitude install libgbm-dev
+apt list | grep libgbm
+
 
+echo "[*****]install ros-humble-desktop, it will cost long time, please wait...(about 1~2 hours)"
 # must use --force-overwrite, or it will cause boost relative library overwrite conflict
-sudo apt -o Dpkg::Options::="--force-overwrite" install -y ros-humble-desktop
+sudo aptitude -o Dpkg::Options::="--force-overwrite" install -y ros-humble-desktop
 sudo apt --fix-broken --option Dpkg::Options::="--force-overwrite" install -y
 
 
 
 echo "[*****]restore libEGL.so to HW solution"
-# libEGL.so was overwrited, restore it
+# libEGL.so was overwrited?, restore it
 rm /usr/lib/aarch64-linux-gnu/libEGL.so
-ln -sf libMali.so /usr/lib/aarch64-linux-gnu/libEGL.so
+ln -sf /usr/lib/libMali.so /usr/lib/aarch64-linux-gnu/libEGL.so
+
 
 
 echo "[*****]install ros-dev-tools"
-sudo apt -o Dpkg::Options::="--force-overwrite" install -y ros-dev-tools
+sudo aptitude -o Dpkg::Options::="--force-overwrite" install -y ros-dev-tools
 sudo apt --fix-broken --option Dpkg::Options::="--force-overwrite" install -y
 
 
-
-echo "[***** *****]Environment setup"
-
-# Replace ".bash" with your shell if you're not using bash
-# Possible values are: setup.bash, setup.sh, setup.zsh
-source /opt/ros/humble/setup.bash
-echo " source /opt/ros/humble/setup.bash" >> ~/.bashrc
-
+# echo "[*****]install ~nros-humble-rqt*"
+# sudo apt install -y ~nros-humble-rqt*
 
 
-echo "[***** *****]Setup ROS2 Done"
+echo "[***** *****]Install ROS2 Done"
 echo "Please check the ROS2 function, more detail information, refer to readme.txt"
 
diff --git a/archives/features/test/install-test/ros2/readme.md b/archives/features/test/install-test/ros2/readme.md
new file mode 100644
index 0000000..436a151
--- /dev/null
+++ b/archives/features/test/install-test/ros2/readme.md
@@ -0,0 +1,161 @@
+use install-ros2.sh, only one script, you can get the ROS2 in amlbian.
+You should run this script in root, as the following:
+```bash
+$ su
+$ ./install-ros2.sh
+```
+
+## install ROS2
+```bash
+$ ./install-ros2.sh
+```
+
+wait a long time(more than 1 hour), and the ROS will be installed successfully.
+the following message will show, if successfully:
+```
+Hello from Docker!
+This message shows that your installation appears to be working correctly.
+
+To generate this message, Docker took the following steps:
+ 1. The Docker client contacted the Docker daemon.
+ 2. The Docker daemon pulled the "hello-world" image from the Docker Hub.
+    (arm64v8)
+ 3. The Docker daemon created a new container from that image which runs the
+    executable that produces the output you are currently reading.
+ 4. The Docker daemon streamed that output to the Docker client, which sent it
+    to your terminal.
+
+To try something more ambitious, you can run an Ubuntu container with:
+ $ docker run -it ubuntu bash
+
+Share images, automate workflows, and more with a free Docker ID:
+ https://hub.docker.com/
+
+For more examples and ideas, visit:
+ https://docs.docker.com/get-started/
+```
+
+
+## Environment setup
+```bash
+# Replace ".bash" with your shell if you're not using bash
+# Possible values are: setup.bash, setup.sh, setup.zsh
+source /opt/ros/humble/setup.bash
+echo " source /opt/ros/humble/setup.bash" >> ~/.bashrc
+```
+
+try "ros2" command, if it have this command, the install is successfully. 
+
+
+## test ROS2 in terminal shell
+You should run the following command in 2 terminal window.
+```bash
+$ ros2 run demo_nodes_cpp talker
+```
+
+```bash
+$ ros2 run demo_nodes_py listener
+```
+
+if “Hello World” is show in the both 2 terminals, the ROS2 works fine. such as following:
+```bash
+$ ros2 run demo_nodes_cpp talker
+[INFO] [1685598790.347160397] [talker]: Publishing: 'Hello World: 287'
+[INFO] [1685598791.347150561] [talker]: Publishing: 'Hello World: 288'
+```
+
+```bash
+$ ros2 run demo_nodes_py listener
+[INFO] [1685598758.350821441] [listener]: I heard: [Hello World: 287]
+[INFO] [1685598759.350540942] [listener]: I heard: [Hello World: 288]
+
+```
+
+
+
+## Turtlesim --- Little Turtle Simulation
+You should run the following command in 2 terminal window.
+```bash
+$ ros2 run turtlesim turtlesim_node
+```
+
+```bash
+$ ros2 run turtlesim turtle_teleop_key
+```
+
+Check turtlesim status,
+```bash
+$  ros2 pkg executables turtlesim
+turtlesim draw_square
+turtlesim mimic
+turtlesim turtle_teleop_key
+turtlesim turtlesim_node
+```
+
+
+## Q && A
+Question 1: If you meet the following error:
+```
+The following packages have unmet dependencies:
+ libgbm-dev : Depends: libgbm1 (= 22.2.5-0ubuntu0.1~22.04.1) but 22.2.5-0ubuntu0.1~22.04.2 is installed
+```
+
+check the gbm version
+```bash
+$ apt list | grep libgbm
+libgbm-dev/jammy-updates 22.2.5-0ubuntu0.1~22.04.1 arm64
+libgbm-dev/jammy-updates 22.2.5-0ubuntu0.1~22.04.1 armhf
+libgbm1/now 22.2.5-0ubuntu0.1~22.04.2 arm64 [installed,local]
+libgbm1/jammy-updates 22.2.5-0ubuntu0.1~22.04.1 armhf
+```
+
+please re-install libgbm-dev by aptitude
+```bash
+$ sudo aptitude install libgbm-dev
+The following NEW packages will be installed:
+  libgbm-dev{b} 
+0 packages upgraded, 1 newly installed, 0 to remove and 17 not upgraded.
+Need to get 9,292 B of archives. After unpacking 96.3 kB will be used.
+The following packages have unmet dependencies:
+ libgbm-dev : Depends: libgbm1 (= 22.2.5-0ubuntu0.1~22.04.1) but 22.2.5-0ubuntu0.1~22.04.2 is installed
+The following actions will resolve these dependencies:
+
+     Keep the following packages at their current version:
+1)     libgbm-dev [Not Installed]                         
+
+
+
+Accept this solution? [Y/n/q/?] n
+The following actions will resolve these dependencies:
+
+     Downgrade the following packages:                                                               
+1)     libegl-mesa0 [22.2.5-0ubuntu0.1~22.04.2 (now) -> 22.2.5-0ubuntu0.1~22.04.1 (jammy-updates)]   
+2)     libgbm1 [22.2.5-0ubuntu0.1~22.04.2 (now) -> 22.2.5-0ubuntu0.1~22.04.1 (jammy-updates)]        
+3)     libgl1-mesa-dri [22.2.5-0ubuntu0.1~22.04.2 (now) -> 22.2.5-0ubuntu0.1~22.04.1 (jammy-updates)]
+4)     libglapi-mesa [22.2.5-0ubuntu0.1~22.04.2 (now) -> 22.2.5-0ubuntu0.1~22.04.1 (jammy-updates)]  
+5)     libglx-mesa0 [22.2.5-0ubuntu0.1~22.04.2 (now) -> 22.2.5-0ubuntu0.1~22.04.1 (jammy-updates)]   
+
+
+
+Accept this solution? [Y/n/q/?] y
+The following packages will be DOWNGRADED:
+  libegl-mesa0 libgbm1 libgl1-mesa-dri libglapi-mesa libglx-mesa0 
+The following NEW packages will be installed:
+  libgbm-dev 
+The following packages are RECOMMENDED but will NOT be installed:
+  libgl1-amber-dri 
+0 packages upgraded, 1 newly installed, 5 downgraded, 0 to remove and 17 not upgraded.
+Need to get 7,606 kB of archives. After unpacking 92.2 kB will be used.
+Do you want to continue? [Y/n/?] y
+
+```
+
+
+after reinstall, check the gbm version again
+```bash
+$ apt list | grep libgbm
+libgbm-dev/jammy-updates 22.2.5-0ubuntu0.1~22.04.1 arm64
+libgbm-dev/jammy-updates 22.2.5-0ubuntu0.1~22.04.1 armhf
+libgbm1/jammy-updates,now 22.2.5-0ubuntu0.1~22.04.1 arm64 [installed,automatic]
+libgbm1/jammy-updates 22.2.5-0ubuntu0.1~22.04.1 armhf
+```
diff --git a/archives/features/test/install-test/ros2/readme.txt b/archives/features/test/install-test/ros2/readme.txt
deleted file mode 100644
index b201560..0000000
--- a/archives/features/test/install-test/ros2/readme.txt
+++ /dev/null
@@ -1,25 +0,0 @@
-use install-ros2.sh, only one script, you can get the ROS2 in amlbian.
-You should run this script in root, as the following:
-$ su
-$ ./install-ros2.sh
-
-1. install ROS2
-$ ./install-ros2.sh
-wait a long time(more than 1 hour), and the ROS will be installed successfully.
-
-
-2. test ROS2 in command
-You should run the following command in 2 terminal window.
-$ ros2 run demo_nodes_cpp talker
-$ ros2 run demo_nodes_py listener
-
-if “Hello World” is show between the 2 terminal, the ROS2 is OK.
-
-
-3. Turtlesim --- Little Turtle Simulation
-You should run the following command in 2 terminal window.
-$ ros2 run turtlesim turtlesim_node
-$ ros2 run turtlesim turtle_teleop_key
-
-
-
diff --git a/archives/features/test/playback-test/playback-burning.sh b/archives/features/test/playback-test/playback-burning.sh
new file mode 100755
index 0000000..3a188d5
--- /dev/null
+++ b/archives/features/test/playback-test/playback-burning.sh
@@ -0,0 +1,40 @@
+#!/bin/bash
+
+
+
+if [ $# == 1 ];then
+    LOOP_CNT=$1
+else
+    LOOP_CNT=1000000
+fi
+
+
+if [ $# == 0 ];then # no parameters
+	echo "please select a media file"
+else
+    MEDIA_FILE=$1
+fi
+
+i=1
+
+while [ $i -le  $LOOP_CNT ]
+do
+    echo "loop i="$i
+
+    ./playback-test.sh $MEDIA_FILE
+
+    # check system memory information
+    echo "free" && free
+    echo "cat /proc/meminfo" && cat /proc/meminfo
+    echo "vmstat -s" && vmstat -s
+
+    let i++
+done
+
+
+if [ $i -le  $LOOP_CNT ]; then
+    echo "burning test failed, total=$LOOP_CNT, current=$i"
+else
+    echo "burning test pass, total=$LOOP_CNT, current=$i"
+fi
+
diff --git a/archives/features/test/playback-test/playback-test.sh b/archives/features/test/playback-test/playback-test.sh
index a4e617a..88b1771 100755
--- a/archives/features/test/playback-test/playback-test.sh
+++ b/archives/features/test/playback-test/playback-test.sh
@@ -1,9 +1,25 @@
 #!/bin/bash
 
+
+# fixed
+###############################################################
+SHELL_FILE_NAME=${BASH_SOURCE}
+SHELL_FILE_NAME=$(basename "$SHELL_FILE_NAME")
+TEST_CASE_NAME=${SHELL_FILE_NAME%.*}
+SHORT_FILE_PATH=$TEST_CASE_NAME.$FILE_EXT
+echo $SHORT_FILE_PATH
+
+FILE_PATH=~/test_result
+mkdir -p $FILE_PATH
+FULL_FILE_PATH=$FILE_PATH/$SHORT_FILE_PATH
+echo $FULL_FILE_PATH
+###############################################################
+
 ## Display parameters
 display_help() {
 	echo "\
 	***************************HELP**************************
+    TEST CASE : $TEST_CASE_NAME
 	please run with a mediafile full path as parameters
 	*.sh full-file-path
 	"
diff --git a/archives/features/test/screencapture-test/readme.txt b/archives/features/test/screencapture-test/readme.md
similarity index 82%
rename from archives/features/test/screencapture-test/readme.txt
rename to archives/features/test/screencapture-test/readme.md
index a199770..48e1964 100644
--- a/archives/features/test/screencapture-test/readme.txt
+++ b/archives/features/test/screencapture-test/readme.md
@@ -1,29 +1,39 @@
 For screen capture and recorder.
 
 
-[example]:
+## example
+```bash
+# capture screen to a jpeg file
+./screen-capture.sh
 ./screen-capture.sh 1920 1080
 ./screen-capture.sh 3840 2160
 
+# show screen to a OSD layer
+./screen-preview.sh
 ./screen-preview.sh 1920 1080
 ./screen-preview.sh 3840 2160
 
+# recorde screen to a mp4 file
+./screen-recorder.sh
 ./screen-recorder.sh 1920 1080 h264parse
 ./screen-recorder.sh 1920 1080 h265parse
 ./screen-recorder.sh 3840 2160 h264parse
 ./screen-recorder.sh 3840 2160 h265parse
+```
 
-
-[about tvin-port]:
+## about tvin-port
+```bash
 $ gst-launch-1.0 -v v4l2src device=/dev/video12 io-mode=mmap ! video/x-raw,format=BGR,width=1920,height=1080,framerate=30000/1001 ! clutterautovideosink
+```
 
 for screen recorder, you can get the screen data from video12, 
-
 for tvin-port, there are 4 types value.
+```
  tvin-port=0x11000000  //vpp0 video only; the main screen video only
  tvin-port=0x11000001  //vpp0(osd+video); the main screen osd+video
  tvin-port=0x11000002  //vpp1 video only; the sub screen video only
  tvin-port=0x11000003  //vpp1(osd+video); the sub screen osd+video
+```
 
 the default  tvin-port is 0x11000001, and only this is verified for every release. 
 you needn't set the propoty, if you use the main screen osd+video. 
diff --git a/archives/features/test/screencapture-test/screen-burning.sh b/archives/features/test/screencapture-test/screen-burning.sh
index f4ff8a6..21ad41e 100755
--- a/archives/features/test/screencapture-test/screen-burning.sh
+++ b/archives/features/test/screencapture-test/screen-burning.sh
@@ -5,10 +5,13 @@
 if [ $# == 1 ];then
     LOOP_CNT=$1
 else
-    LOOP_CNT=100
+    LOOP_CNT=1000000
 fi
 
 
+FILE_PATH=~/test_result
+
+
 i=1
 
 while [ $i -le  $LOOP_CNT ]
@@ -16,9 +19,29 @@ do
     echo "loop i="$i
 
     ./screen-capture.sh 1920 1080
+    [[ ! -s "$FILE_PATH/screen-capture.pass" ]] || break
+    rm "$FILE_PATH/screen-capture.pass"
+
     ./screen-recorder.sh 1920 1080 h264
+    [[ ! -s "$FILE_PATH/screen-recorder.pass" ]] || break
+    rm "$FILE_PATH/screen-recorder.pass"
+
     ./screen-recorder.sh 1920 1080 h265
+    [[ ! -s "$FILE_PATH/screen-recorder.pass" ]] || break
+    rm "$FILE_PATH/screen-recorder.pass"
+
+    # check system memory information
+    echo "free" && free
+    echo "cat /proc/meminfo" && cat /proc/meminfo
+    echo "vmstat -s" && vmstat -s
 
     let i++
 done
 
+
+if [ $i -le  $LOOP_CNT ]; then
+    echo "burning test failed, total=$LOOP_CNT, current=$i"
+else
+    echo "burning test pass, total=$LOOP_CNT, current=$i"
+fi
+
diff --git a/archives/features/test/screencapture-test/screen-capture.sh b/archives/features/test/screencapture-test/screen-capture.sh
index 73bbef7..edf43d2 100755
--- a/archives/features/test/screencapture-test/screen-capture.sh
+++ b/archives/features/test/screencapture-test/screen-capture.sh
@@ -4,12 +4,12 @@
 DEVICE="video12"
 FILE_EXT="jpg"
 
+WIDTH=1920
+HEIGHT=1080
+
 if [ $# == 2 ];then
     WIDTH=$1
     HEIGHT=$2
-else
-    WIDTH=1920
-    HEIGHT=1080
 fi
 
 # fixed
@@ -30,6 +30,7 @@ echo $FULL_FILE_PATH
 display_help() {
 	echo "\
 	***************************HELP**************************
+    TEST CASE : $TEST_CASE_NAME
     Screen recorder to a jpeg file
 
     EXAMPLES:
diff --git a/archives/features/test/screencapture-test/screen-preview.sh b/archives/features/test/screencapture-test/screen-preview.sh
index b9d6de7..204d183 100755
--- a/archives/features/test/screencapture-test/screen-preview.sh
+++ b/archives/features/test/screencapture-test/screen-preview.sh
@@ -11,10 +11,25 @@ else
     HEIGHT=1080
 fi
 
+# fixed
+###############################################################
+SHELL_FILE_NAME=${BASH_SOURCE}
+SHELL_FILE_NAME=$(basename "$SHELL_FILE_NAME")
+TEST_CASE_NAME=${SHELL_FILE_NAME%.*}
+SHORT_FILE_PATH=$TEST_CASE_NAME.$FILE_EXT
+echo $SHORT_FILE_PATH
+
+FILE_PATH=~/test_result
+mkdir -p $FILE_PATH
+FULL_FILE_PATH=$FILE_PATH/$SHORT_FILE_PATH
+echo $FULL_FILE_PATH
+###############################################################
+
 ## Display parameters
 display_help() {
 	echo "\
 	***************************HELP**************************
+    TEST CASE : $TEST_CASE_NAME
     Please make sure the only one camera is plugin
     if no parameters, $DEVICE will be act as the default camera
 
diff --git a/archives/features/test/screencapture-test/screen-recorder.sh b/archives/features/test/screencapture-test/screen-recorder.sh
index 0c823aa..95165c2 100755
--- a/archives/features/test/screencapture-test/screen-recorder.sh
+++ b/archives/features/test/screencapture-test/screen-recorder.sh
@@ -3,14 +3,14 @@
 DEVICE="video12"
 FILE_EXT="mp4"
 
+WIDTH=1920
+HEIGHT=1080
+PARSE_TYPE="h264parse"
+
 if [ $# == 3 ];then
     WIDTH=$1
     HEIGHT=$2
     PARSE_TYPE=$3"parse"
-else
-    WIDTH=1920
-    HEIGHT=1080
-    PARSE_TYPE="h264parse"
 fi
 
 
@@ -32,6 +32,7 @@ echo $FULL_FILE_PATH
 display_help() {
 	echo "\
 	***************************HELP**************************
+    TEST CASE : $TEST_CASE_NAME
     Screen recorder to a jpeg file
 
     EXAMPLES:
diff --git a/config/functions/build-base-rootfs b/config/functions/build-base-rootfs
index 5f0defc..53faf61 100755
--- a/config/functions/build-base-rootfs
+++ b/config/functions/build-base-rootfs
@@ -80,7 +80,7 @@ PACKAGE_LIST_GSTREAMER="gstreamer1.0-libav gstreamer1.0-plugins-bad gstreamer1.0
 
 PACKAGE_LIST_QT="libqt5opengl5 libqt5qml5 libqt5quick5 libqt5widgets5 libqt5gui5 libqt5core5a qml-module-qtquick2 \
 	libqt5multimedia5 libqt5multimedia5-plugins qml-module-qt-labs-folderlistmodel qml-module-qtmultimedia \
-	libqt5multimediawidgets5 qtbase5-dev libglib2.0-dev libpulse-dev"
+	libqt5multimediawidgets5 qtbase5-dev libglib2.0-dev libpulse-dev qtwayland5 "
 
 
 
-- 
2.25.1

